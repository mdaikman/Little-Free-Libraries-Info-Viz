{"ast":null,"code":"import _slicedToArray from \"C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mda\\\\Desktop\\\\goGITit\\\\invisible\\\\Info-Viz\\\\src\\\\components\\\\Map.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from \"react-leaflet\";\nimport Legend from \"./Legend.js\";\nimport csd from \"../data/CSDs_LFLs.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Map = function Map() {\n  _s();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      onselect = _useState2[0],\n      setOnselect = _useState2[1];\n  /* function determining what should happen onmouseover, this function updates our state*/\n\n\n  var highlightFeature = function highlightFeature(e) {\n    var layer = e.target; // const { County, Total, Male, Female, Intersex, Desnity } = e.target.feature.properties;\n    // setOnselect({\n    //     county:County,\n    //     total:Total,\n    //     male:Male,\n    //     female:Female,\n    //     intersex:Intersex,\n    //     density: Desnity\n    // });\n\n    layer.setStyle({\n      weight: 1,\n      color: \"black\",\n      fillOpacity: 0.6,\n      fillColor: \"#78716e\"\n    });\n  };\n  /*resets our state i.e no properties should be displayed when a feature is not clicked or hovered over */\n\n\n  var resetHighlight = function resetHighlight(e) {\n    // setOnselect({});\n    e.target.setStyle(style(e.target.feature));\n  };\n  /* this function is called when a feature in the map is hovered over or when a mouse moves out of it, the function calls two functions\r\n     highlightFeature and resetHighlight*/\n\n\n  var onEachFeature = function onEachFeature(feature, layer) {\n    layer.bindPopup(\"my tooltip text\"); // layer.bindTooltip(\"my tooltip text\").openTooltip();\n\n    layer.on({\n      mouseover: highlightFeature,\n      mouseout: resetHighlight\n    });\n  };\n\n  var style = function style(feature) {\n    return {\n      fillColor: \"#54c5d5\",\n      weight: 1,\n      opacity: 1,\n      color: \"black\",\n      fillOpacity: 0.6\n    };\n  };\n\n  var data = Array.from(csd);\n  var feature = data.map(function (feature) {\n    return feature;\n  });\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [48.4284, -123.7656],\n    zoom: 10,\n    scrollWheelZoom: true,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, _this), feature && /*#__PURE__*/_jsxDEV(GeoJSON, {\n      style: style,\n      data: csd,\n      onEachFeature: onEachFeature\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Map, \"juJgLrdLg32hpQPpzhyxma6wVCI=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/src/components/Map.js"],"names":["React","useState","MapContainer","TileLayer","Marker","Popup","GeoJSON","Legend","csd","Map","onselect","setOnselect","highlightFeature","e","layer","target","setStyle","weight","color","fillOpacity","fillColor","resetHighlight","style","feature","onEachFeature","bindPopup","on","mouseover","mouseout","opacity","data","Array","from","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,OAAjD,QAAgE,eAAhE;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;;;AAGA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA;;AAChB,kBAAgCR,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOS,QAAP;AAAA,MAAiBC,WAAjB;AAEA;;;AACA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD,EAAO;AAC9B,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAd,CAD8B,CAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAD,IAAAA,KAAK,CAACE,QAAN,CAAe;AACbC,MAAAA,MAAM,EAAE,CADK;AAEbC,MAAAA,KAAK,EAAE,OAFM;AAGbC,MAAAA,WAAW,EAAE,GAHA;AAIbC,MAAAA,SAAS,EAAE;AAJE,KAAf;AAMD,GAjBD;AAmBA;;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACR,CAAD,EAAO;AAC5B;AACAA,IAAAA,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBM,KAAK,CAACT,CAAC,CAACE,MAAF,CAASQ,OAAV,CAAvB;AACD,GAHD;AAMA;AACF;;;AACE,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACD,OAAD,EAAUT,KAAV,EAAoB;AACxCA,IAAAA,KAAK,CAACW,SAAN,CAAgB,iBAAhB,EADwC,CAExC;;AACAX,IAAAA,KAAK,CAACY,EAAN,CAAS;AACPC,MAAAA,SAAS,EAAEf,gBADJ;AAEPgB,MAAAA,QAAQ,EAAEP;AAFH,KAAT;AAID,GAPD;;AASA,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,OAAD,EAAa;AACzB,WAAO;AACLH,MAAAA,SAAS,EAAE,SADN;AAELH,MAAAA,MAAM,EAAE,CAFH;AAGLY,MAAAA,OAAO,EAAE,CAHJ;AAILX,MAAAA,KAAK,EAAE,OAJF;AAKLC,MAAAA,WAAW,EAAE;AALR,KAAP;AAOD,GARD;;AAUA,MAAIW,IAAI,GAAGC,KAAK,CAACC,IAAN,CAAWxB,GAAX,CAAX;AAEA,MAAMe,OAAO,GAAGO,IAAI,CAACG,GAAL,CAAS,UAAAV,OAAO;AAAA,WAAIA,OAAJ;AAAA,GAAhB,CAAhB;AAEA,sBACE,QAAC,YAAD;AACE,IAAA,MAAM,EAAE,CAAC,OAAD,EAAU,CAAC,QAAX,CADV;AAEE,IAAA,IAAI,EAAE,EAFR;AAGE,IAAA,eAAe,EAAE,IAHnB;AAAA,4BAKE,QAAC,SAAD;AACE,MAAA,WAAW,EAAC,0EADd;AAEE,MAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,aALF,EAUGA,OAAO,iBACN,QAAC,OAAD;AAAS,MAAA,KAAK,EAAED,KAAhB;AAAuB,MAAA,IAAI,EAAEd,GAA7B;AAAkC,MAAA,aAAa,EAAEgB;AAAjD;AAAA;AAAA;AAAA;AAAA,aAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA4BD,CAnFD;;GAAMf,G;;KAAAA,G;AAqFN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from \"react-leaflet\";\r\nimport Legend from \"./Legend.js\";\r\nimport csd from \"../data/CSDs_LFLs.json\";\r\n\r\n\r\nconst Map = () => {\r\n  const [onselect, setOnselect] = useState({});\r\n\r\n  /* function determining what should happen onmouseover, this function updates our state*/\r\n  const highlightFeature = (e) => {\r\n    var layer = e.target;\r\n    // const { County, Total, Male, Female, Intersex, Desnity } = e.target.feature.properties;\r\n    // setOnselect({\r\n    //     county:County,\r\n    //     total:Total,\r\n    //     male:Male,\r\n    //     female:Female,\r\n    //     intersex:Intersex,\r\n    //     density: Desnity\r\n    // });\r\n    layer.setStyle({\r\n      weight: 1,\r\n      color: \"black\",\r\n      fillOpacity: 0.6,\r\n      fillColor: \"#78716e\",\r\n    });\r\n  };\r\n\r\n  /*resets our state i.e no properties should be displayed when a feature is not clicked or hovered over */\r\n  const resetHighlight = (e) => {\r\n    // setOnselect({});\r\n    e.target.setStyle(style(e.target.feature));\r\n  };\r\n\r\n\r\n  /* this function is called when a feature in the map is hovered over or when a mouse moves out of it, the function calls two functions\r\n     highlightFeature and resetHighlight*/\r\n  const onEachFeature = (feature, layer) => {\r\n    layer.bindPopup(\"my tooltip text\");\r\n    // layer.bindTooltip(\"my tooltip text\").openTooltip();\r\n    layer.on({\r\n      mouseover: highlightFeature,\r\n      mouseout: resetHighlight,\r\n    });\r\n  };\r\n\r\n  const style = (feature) => {\r\n    return {\r\n      fillColor: \"#54c5d5\",\r\n      weight: 1,\r\n      opacity: 1,\r\n      color: \"black\",\r\n      fillOpacity: 0.6,\r\n    };\r\n  };\r\n\r\n  let data = Array.from(csd);\r\n\r\n  const feature = data.map(feature => feature);\r\n\r\n  return (\r\n    <MapContainer\r\n      center={[48.4284, -123.7656]}\r\n      zoom={10}\r\n      scrollWheelZoom={true}\r\n    >\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n\r\n      {feature && (\r\n        <GeoJSON style={style} data={csd} onEachFeature={onEachFeature} />\r\n      )}\r\n\r\n      {/* {lflData.map(lfl => {\r\n            <Marker key = {lfl.name} position={[lfl.lat, lfl.lon]}>\r\n            <Popup position={[lfl.lat, lfl.lon]}>\r\n                <div>\r\n                <h2>{`name: ${lfl.name}`}</h2>\r\n                </div>\r\n            </Popup>\r\n            </Marker>\r\n        })} */}\r\n\r\n    {/* <Legend /> */}\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}