{"ast":null,"code":"import _classCallCheck from \"C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\mda\\\\Desktop\\\\goGITit\\\\invisible\\\\Info-Viz\\\\src\\\\components\\\\Chart.js\";\nimport React from \"react\";\nimport { ResponsiveScatterPlot } from \"@nivo/scatterplot\";\nimport data1 from \"../data/data1.json\";\nimport data2 from \"../data/data2.json\";\nimport data3 from \"../data/data3.json\";\nimport data4 from \"../data/data4.json\";\nimport data5 from \"../data/data5.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar colors_number = ['#0707FF', '#3737FF', '#B7B7FF', '#D1D1FF', '#D9D9FF', '#DBDBFF', '#DCDCFF', '#E0E0FF', '#E3E3FF', '#E4E4FF', '#ECECFF', '#EFEFFF', '#F0F0FF', '#F1F1FF', '#F4F4FF'];\nvar colors_density = ['#1515FF', '#D3D3FF', '#A2A2FF', '#B5B5FF', '#E9E9FF', '#E9E9FF', '#EBEBFF', '#E1E1FF', '#DFDFFF', '#F0F0FF', '#F3F3FF', '#E4E4FF', '#F3F3FF', '#F5F5FF', '#F5F5FF']; //Follows this order for LFL #s & LFL/SqKm:\n// Victoria, Saanich, Oak Bay, Esquimalt, North Saanich, Langford, Central Saanich, Colwood, View Royal, Sooke, Metchosin, Sidney, Highlands, Juan de Fuca (Part 1), Juan de Fuca (Part 2)\n\nvar Chart = /*#__PURE__*/function (_React$Component) {\n  _inherits(Chart, _React$Component);\n\n  var _super = _createSuper(Chart);\n\n  function Chart() {\n    _classCallCheck(this, Chart);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Chart, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var data;\n      var markers = [];\n      var axisBottom = {};\n      var axisLeft = {};\n      var xFormat = \" >-$,.2f\";\n      var yFormat = \" >-$,.2f\";\n      var xScale = {\n        type: 'linear',\n        min: 0,\n        max: 'auto'\n      };\n      var colors = colors_number;\n      var featureNum = 0;\n      var annotations = []; // switch for legends\n\n      switch (this.props.state.legend) {\n        case 1:\n          colors = colors_number;\n          break;\n\n        case 2:\n          colors = colors_density;\n          break;\n\n        default:\n          break;\n      } // switch for annotations, based on selection given from map\n      // https://nivo.rocks/storybook/?path=/story/swarmplot--using-annotations\n      // switch(this.props.value.map) {}\n      // this.props.state.infoPanel.findIndex(x => x.id === this.props.state.selectedFeature.feature.properties[\"Census subdivision name\"]);\n\n\n      if (this.props.state.selectedFeature != null) {\n        featureNum = this.props.state.infoPanel.findIndex(function (x) {\n          return x.id === _this.props.state.selectedFeature.feature.properties[\"Census subdivision name\"];\n        });\n        console.log(featureNum);\n      } // switch for charts\n\n\n      switch (this.props.state.chart) {\n        case 1:\n          data = data1;\n          markers = [{\n            axis: 'y',\n            value: 62900,\n            lineStyle: {\n              stroke: '#888',\n              strokeWidth: 2\n            },\n            legend: 'Canadian Median Income $62,900',\n            legendPosition: 'bottom',\n            legendOffset: -60,\n            textStyle: {\n              fill: '#888',\n              fontSize: 12\n            }\n          }, {\n            axis: 'x',\n            value: 82,\n            lineStyle: {\n              stroke: '#888',\n              strokeWidth: 2\n            },\n            legend: 'Canadian Life Expectancy: 82 years',\n            legendPosition: 'top',\n            legendOffset: 0,\n            textStyle: {\n              fill: '#888',\n              fontSize: 12\n            }\n          }];\n          axisBottom = {\n            orient: 'bottom',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Median Age (years)',\n            legendPosition: 'middle',\n            legendOffset: 46\n          };\n          axisLeft = {\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Median Household Income',\n            legendPosition: 'middle',\n            legendOffset: -60,\n            format: \">-$,.0f\"\n          };\n          xFormat = \">.0f\";\n          yFormat = \">-$,.0f\";\n          xScale = {\n            type: 'linear',\n            min: 0,\n            max: '82'\n          };\n          break;\n\n        case 2:\n          data = data2;\n          markers = [{\n            axis: 'y',\n            value: 62900,\n            lineStyle: {\n              stroke: '#888',\n              strokeWidth: 2\n            },\n            legend: 'Canadian Median Income $62,900',\n            legendPosition: 'bottom',\n            legendOffset: -60,\n            textStyle: {\n              fill: '#888',\n              fontSize: 12\n            }\n          }];\n          axisBottom = {\n            orient: 'bottom',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Total Number of Houses',\n            legendPosition: 'middle',\n            legendOffset: 46\n          };\n          axisLeft = {\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Median Household Income',\n            legendPosition: 'middle',\n            legendOffset: -60,\n            format: \">-$,.0f\"\n          };\n          xFormat = \">.0f\";\n          yFormat = \">$,.0f\";\n          xScale = {\n            type: 'linear',\n            min: 0,\n            max: 'auto'\n          };\n          break;\n\n        case 3:\n          data = data3;\n          markers = [];\n          axisBottom = {\n            orient: 'bottom',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Total Number of Houses',\n            legendPosition: 'middle',\n            legendOffset: 46\n          };\n          axisLeft = {\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Population Density (People Per SqKm)',\n            legendPosition: 'middle',\n            legendOffset: -60,\n            format: \">.0f\"\n          };\n          xFormat = \">,.0f\";\n          yFormat = \">,.0f\";\n          xScale = {\n            type: 'linear',\n            min: 0,\n            max: 'auto'\n          };\n          break;\n\n        case 4:\n          data = data4;\n          markers = [];\n          axisBottom = {\n            orient: 'bottom',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Little Free Library Density (LFLs Per SqKm)',\n            legendPosition: 'middle',\n            legendOffset: 46\n          };\n          axisLeft = {\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Population Density (People Per SqKm)',\n            legendPosition: 'middle',\n            legendOffset: -60,\n            format: \">.0f\"\n          };\n          xFormat = \">,.2f\";\n          yFormat = \">,.0f\";\n          xScale = {\n            type: 'linear',\n            min: 0,\n            max: '10'\n          };\n          break;\n\n        case 5:\n          data = data5;\n          markers = [{\n            axis: 'y',\n            value: .226,\n            lineStyle: {\n              stroke: '#888',\n              strokeWidth: 2\n            },\n            legend: 'Canadian Non-official Language Speakers: 22.6%',\n            legendPosition: 'bottom',\n            legendOffset: -60,\n            textStyle: {\n              fill: '#888',\n              fontSize: 12\n            }\n          }, {\n            axis: 'x',\n            value: .223,\n            lineStyle: {\n              stroke: '#888',\n              strokeWidth: 2\n            },\n            legend: 'Canadian Visible Minorities: 22.3%',\n            legendPosition: 'top',\n            legendOffset: 0,\n            textStyle: {\n              fill: '#888',\n              fontSize: 12\n            }\n          }];\n          axisBottom = {\n            orient: 'bottom',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: '% Visible Minorities',\n            legendPosition: 'middle',\n            legendOffset: 46,\n            format: \">.0%\"\n          };\n          axisLeft = {\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: '% Non-Official Language Speakers',\n            legendPosition: 'middle',\n            legendOffset: -60,\n            format: \">.0%\"\n          };\n          xFormat = \">.2%\";\n          yFormat = \">.2%\";\n          xScale = {\n            type: 'linear',\n            min: 0,\n            max: '.25'\n          };\n          break;\n\n        default:\n          break;\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(ResponsiveScatterPlot, {\n          data: data,\n          margin: {\n            top: 60,\n            right: 190,\n            bottom: 100,\n            left: 90\n          },\n          xScale: xScale,\n          xFormat: xFormat,\n          yScale: {\n            type: 'linear',\n            min: 0,\n            max: 'auto'\n          },\n          yFormat: yFormat // https://stackoverflow.com/questions/67241395/how-to-add-custom-color-theme-in-nivo-chart-settings\n          // /*\n          ,\n          colors: colors,\n          colorBy: \"index\",\n          blendMode: \"multiply\",\n          axisTop: null,\n          axisRight: null,\n          axisBottom: axisBottom,\n          axisLeft: axisLeft,\n          markers: markers,\n          annotations: annotations,\n          motionConfig: {\n            mass: 87,\n            tension: 427,\n            friction: 500,\n            clamp: false,\n            precision: 0.01,\n            velocity: 0\n          },\n          legends: [{\n            anchor: 'right',\n            direction: 'column',\n            justify: false,\n            translateX: 115,\n            translateY: 0,\n            itemWidth: 100,\n            itemHeight: 12,\n            itemsSpacing: 5,\n            itemDirection: 'left-to-right',\n            symbolSize: 12,\n            symbolShape: 'square',\n            effects: [{\n              on: 'hover',\n              style: {\n                itemOpacity: 1\n              }\n            }]\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this);\n    }\n  }]);\n\n  return Chart;\n}(React.Component);\n\nexport { Chart as default };","map":{"version":3,"sources":["C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/src/components/Chart.js"],"names":["React","ResponsiveScatterPlot","data1","data2","data3","data4","data5","colors_number","colors_density","Chart","data","markers","axisBottom","axisLeft","xFormat","yFormat","xScale","type","min","max","colors","featureNum","annotations","props","state","legend","selectedFeature","infoPanel","findIndex","x","id","feature","properties","console","log","chart","axis","value","lineStyle","stroke","strokeWidth","legendPosition","legendOffset","textStyle","fill","fontSize","orient","tickSize","tickPadding","tickRotation","format","top","right","bottom","left","mass","tension","friction","clamp","precision","velocity","anchor","direction","justify","translateX","translateY","itemWidth","itemHeight","itemsSpacing","itemDirection","symbolSize","symbolShape","effects","on","style","itemOpacity","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { ResponsiveScatterPlot } from \"@nivo/scatterplot\";\r\n\r\nimport data1 from \"../data/data1.json\";\r\nimport data2 from \"../data/data2.json\";\r\nimport data3 from \"../data/data3.json\";\r\nimport data4 from \"../data/data4.json\";\r\nimport data5 from \"../data/data5.json\";\r\n\r\nlet colors_number  = ['#0707FF','#3737FF','#B7B7FF','#D1D1FF','#D9D9FF','#DBDBFF','#DCDCFF','#E0E0FF','#E3E3FF','#E4E4FF','#ECECFF','#EFEFFF','#F0F0FF','#F1F1FF','#F4F4FF'];\r\nlet colors_density = ['#1515FF','#D3D3FF','#A2A2FF','#B5B5FF','#E9E9FF','#E9E9FF','#EBEBFF','#E1E1FF','#DFDFFF','#F0F0FF','#F3F3FF','#E4E4FF','#F3F3FF','#F5F5FF','#F5F5FF'];\r\n                \r\n//Follows this order for LFL #s & LFL/SqKm:\r\n// Victoria, Saanich, Oak Bay, Esquimalt, North Saanich, Langford, Central Saanich, Colwood, View Royal, Sooke, Metchosin, Sidney, Highlands, Juan de Fuca (Part 1), Juan de Fuca (Part 2)\r\n                        \r\nexport default class Chart extends React.Component {\r\n  render() {\r\n    var data;\r\n    var markers = [];\r\n    var axisBottom = {};\r\n    var axisLeft ={};\r\n    var xFormat = \" >-$,.2f\"\r\n    var yFormat = \" >-$,.2f\"\r\n    var xScale  = { type: 'linear', min: 0, max: 'auto' }\r\n    var colors = colors_number;\r\n    var featureNum = 0;\r\n    var annotations = [];\r\n    \r\n    \r\n    // switch for legends\r\n    switch(this.props.state.legend) {\r\n        case 1:\r\n            colors = colors_number;\r\n            break;\r\n        case 2:\r\n            colors = colors_density;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    \r\n    // switch for annotations, based on selection given from map\r\n    // https://nivo.rocks/storybook/?path=/story/swarmplot--using-annotations\r\n    \r\n    // switch(this.props.value.map) {}\r\n    // this.props.state.infoPanel.findIndex(x => x.id === this.props.state.selectedFeature.feature.properties[\"Census subdivision name\"]);\r\n    \r\n    if(this.props.state.selectedFeature != null) {\r\n        featureNum = this.props.state.infoPanel.findIndex(x => x.id === this.props.state.selectedFeature.feature.properties[\"Census subdivision name\"]);\r\n        console.log(featureNum);\r\n    }\r\n\r\n    \r\n    // switch for charts\r\n    switch(this.props.state.chart) {\r\n        case 1:\r\n            data = data1;\r\n            markers = [\r\n                    {\r\n                      axis: 'y',\r\n                      value: 62900,\r\n                      lineStyle: { stroke: '#888', strokeWidth: 2 },\r\n                      legend: 'Canadian Median Income $62,900',\r\n                      legendPosition: 'bottom',\r\n                      legendOffset: -60,\r\n                      textStyle: {\r\n                        fill: '#888',\r\n                        fontSize: 12 ,\r\n                      }\r\n                    },\r\n                    {\r\n                      axis: 'x',\r\n                      value: 82,\r\n                      lineStyle: { stroke: '#888', strokeWidth: 2 },\r\n                      legend: 'Canadian Life Expectancy: 82 years',\r\n                      legendPosition: 'top',\r\n                      legendOffset: 0,\r\n                      textStyle: {\r\n                        fill: '#888',\r\n                        fontSize: 12 ,\r\n                      }\r\n                    }\r\n                ];\r\n            axisBottom = {\r\n                    orient: 'bottom',\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: 'Median Age (years)',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: 46\r\n                }\r\n            axisLeft = {\r\n                    orient: 'left',\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: 'Median Household Income',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: -60,\r\n                    format: \">-$,.0f\"\r\n                }\r\n            xFormat = \">.0f\";\r\n            yFormat = \">-$,.0f\";\r\n            xScale  = { type: 'linear', min: 0, max: '82' }\r\n            break;\r\n        case 2:\r\n            data = data2;\r\n            markers = [\r\n                    {\r\n                      axis: 'y',\r\n                      value: 62900,\r\n                      lineStyle: { stroke: '#888', strokeWidth: 2 },\r\n                      legend: 'Canadian Median Income $62,900',\r\n                      legendPosition: 'bottom',\r\n                      legendOffset: -60,\r\n                      textStyle: {\r\n                        fill: '#888',\r\n                        fontSize: 12 ,\r\n                      }\r\n                    }\r\n                ];\r\n            axisBottom = {\r\n                    orient: 'bottom',\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: 'Total Number of Houses',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: 46\r\n                }\r\n            axisLeft = {\r\n                    orient: 'left',\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: 'Median Household Income',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: -60,\r\n                    format: \">-$,.0f\"\r\n                }\r\n            xFormat = \">.0f\";\r\n            yFormat = \">$,.0f\";\r\n            xScale  = { type: 'linear', min: 0, max: 'auto' };\r\n            break;\r\n        case 3:\r\n            data = data3;\r\n            markers = [\r\n                    \r\n                ];\r\n            axisBottom = {\r\n                    orient: 'bottom',\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: 'Total Number of Houses',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: 46\r\n                }\r\n            axisLeft = {\r\n                    orient: 'left',\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: 'Population Density (People Per SqKm)',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: -60,\r\n                    format: \">.0f\"\r\n                }\r\n            xFormat = \">,.0f\";\r\n            yFormat = \">,.0f\";\r\n            xScale  = { type: 'linear', min: 0, max: 'auto' };\r\n            break;\r\n        case 4:\r\n            data = data4;\r\n            markers = [\r\n                ];\r\n            axisBottom = {\r\n                    orient: 'bottom',\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: 'Little Free Library Density (LFLs Per SqKm)',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: 46\r\n                }\r\n            axisLeft = {\r\n                    orient: 'left',\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: 'Population Density (People Per SqKm)',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: -60,\r\n                    format: \">.0f\"\r\n                }\r\n            xFormat = \">,.2f\";\r\n            yFormat = \">,.0f\";\r\n            xScale  = { type: 'linear', min: 0, max: '10' }\r\n            break;\r\n        case 5:\r\n            data = data5;\r\n            markers = [\r\n                    {\r\n                      axis: 'y',\r\n                      value: .226,\r\n                      lineStyle: { stroke: '#888', strokeWidth: 2 },\r\n                      legend: 'Canadian Non-official Language Speakers: 22.6%',\r\n                      legendPosition: 'bottom',\r\n                      legendOffset: -60,\r\n                      textStyle: {\r\n                        fill: '#888',\r\n                        fontSize: 12 ,\r\n                      }\r\n                    },\r\n                    {\r\n                      axis: 'x',\r\n                      value: .223,\r\n                      lineStyle: { stroke: '#888', strokeWidth: 2 },\r\n                      legend: 'Canadian Visible Minorities: 22.3%',\r\n                      legendPosition: 'top',\r\n                      legendOffset: 0,\r\n                      textStyle: {\r\n                        fill: '#888',\r\n                        fontSize: 12 ,\r\n                      }\r\n                    }\r\n                ];\r\n            axisBottom = {\r\n                    orient: 'bottom',\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: '% Visible Minorities',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: 46,\r\n                    format: \">.0%\"\r\n                }\r\n            axisLeft = {\r\n                    orient: 'left',\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: '% Non-Official Language Speakers',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: -60,\r\n                    format: \">.0%\"\r\n                }\r\n            xFormat = \">.2%\";\r\n            yFormat = \">.2%\";\r\n            xScale  = { type: 'linear', min: 0, max: '.25' };\r\n            break;   \r\n        default:\r\n            break;\r\n    }\r\n    return (\r\n        <div className=\"chart\">\r\n            <ResponsiveScatterPlot\r\n                data={data}\r\n                margin={{ top: 60, right: 190, bottom: 100, left: 90 }}\r\n                xScale={ xScale }\r\n                xFormat={ xFormat }\r\n                yScale={{ type: 'linear', min: 0, max: 'auto' }}\r\n                yFormat={ yFormat }\r\n                // https://stackoverflow.com/questions/67241395/how-to-add-custom-color-theme-in-nivo-chart-settings\r\n                // /*\r\n                colors={colors}\r\n                colorBy=\"index\"\r\n                blendMode=\"multiply\"\r\n                axisTop={null}\r\n                axisRight={null}\r\n                axisBottom={ axisBottom }\r\n                axisLeft={ axisLeft }\r\n                markers={ markers }\r\n                annotations = { annotations }\r\n                motionConfig={{\r\n                        mass: 87,\r\n                        tension: 427,\r\n                        friction: 500,\r\n                        clamp: false,\r\n                        precision: 0.01,\r\n                        velocity: 0 }}\r\n                legends={[\r\n                    {\r\n                        anchor: 'right',\r\n                        direction: 'column',\r\n                        justify: false,\r\n                        translateX: 115,\r\n                        translateY: 0,\r\n                        itemWidth: 100,\r\n                        itemHeight: 12,\r\n                        itemsSpacing: 5,\r\n                        itemDirection: 'left-to-right',\r\n                        symbolSize: 12,\r\n                        symbolShape: 'square',\r\n                        effects: [\r\n                            {\r\n                                on: 'hover',\r\n                                style: {\r\n                                    itemOpacity: 1\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                ]}\r\n            />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}