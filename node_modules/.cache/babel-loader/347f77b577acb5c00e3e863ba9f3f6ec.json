{"ast":null,"code":"import _classCallCheck from \"C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\mda\\\\Desktop\\\\goGITit\\\\invisible\\\\Info-Viz\\\\src\\\\components\\\\Chart.js\";\nimport React from \"react\";\nimport { ResponsiveScatterPlot } from \"@nivo/scatterplot\";\nimport { Dropdown, Option } from \"./Dropdown\";\nimport data0 from \"../data/data.json\";\nimport data1 from \"../data/data1.json\";\nimport data2 from \"../data/data2.json\";\nimport data3 from \"../data/data3.json\";\nimport data4 from \"../data/data4.json\";\nimport data5 from \"../data/data5.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar colors_number = ['#0707FF', '#3737FF', '#B7B7FF', '#D1D1FF', '#D9D9FF', '#DBDBFF', '#DCDCFF', '#E0E0FF', '#E3E3FF', '#E4E4FF', '#ECECFF', '#EFEFFF', '#F0F0FF', '#F1F1FF', '#F4F4FF'];\nvar colors_density = ['#1515FF', '#D3D3FF', '#A2A2FF', '#B5B5FF', '#E9E9FF', '#E9E9FF', '#EBEBFF', '#E1E1FF', '#DFDFFF', '#F0F0FF', '#F3F3FF', '#E4E4FF', '#F3F3FF', '#F5F5FF', '#F5F5FF']; //Follows this order for LFL #s & LFL/SqKm:\n// Victoria, Saanich, Oak Bay, Esquimalt, North Saanich, Langford, Central Saanich, Colwood, View Royal, Sooke, Metchosin, Sidney, Highlands, Juan de Fuca (Part 1), Juan de Fuca (Part 2)\n\nvar Chart = /*#__PURE__*/function (_React$Component) {\n  _inherits(Chart, _React$Component);\n\n  var _super = _createSuper(Chart);\n\n  function Chart() {\n    _classCallCheck(this, Chart);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Chart, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var data;\n      var markers = [];\n      var axisBottom = {};\n      var axisLeft = {};\n      var xFormat = \" >-$,.2f\";\n      var yFormat = \" >-$,.2f\";\n\n      switch (this.props.state.chart) {\n        case 1:\n          data = data1;\n          markers = [{\n            axis: 'y',\n            value: 62900,\n            lineStyle: {\n              stroke: '#888',\n              strokeWidth: 2\n            },\n            legend: 'Canadian Median Income $62,900',\n            legendPosition: 'bottom',\n            legendOffset: -60,\n            textStyle: {\n              fill: '#888',\n              fontSize: 12\n            }\n          }];\n          axisBottom = {\n            orient: 'bottom',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Median Age',\n            legendPosition: 'middle',\n            legendOffset: 46\n          };\n          axisLeft = {\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Median Household Income',\n            legendPosition: 'middle',\n            legendOffset: -60,\n            format: \">-$,.0f\"\n          };\n          xFormat = \">-.2f\";\n          yFormat = \" >-$,.2f\";\n          break;\n\n        case 2:\n          data = data2;\n          markers = [{\n            axis: 'y',\n            value: 62900,\n            lineStyle: {\n              stroke: '#888',\n              strokeWidth: 2\n            },\n            legend: 'Canadian Median Income $62,900',\n            legendPosition: 'bottom',\n            legendOffset: -60,\n            textStyle: {\n              fill: '#888',\n              fontSize: 12\n            }\n          }];\n          axisBottom = {\n            orient: 'bottom',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Median Age',\n            legendPosition: 'middle',\n            legendOffset: 46\n          };\n          axisLeft = {\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Median Household Income',\n            legendPosition: 'middle',\n            legendOffset: -60,\n            format: \">-$,.0f\"\n          };\n          xFormat = \">-.2f\";\n          yFormat = \" >-$,.2f\";\n          break;\n\n        case 3:\n          data = data3;\n          markers = [{\n            axis: 'y',\n            value: 62900,\n            lineStyle: {\n              stroke: '#888',\n              strokeWidth: 2\n            },\n            legend: 'Canadian Median Income $62,900',\n            legendPosition: 'bottom',\n            legendOffset: -60,\n            textStyle: {\n              fill: '#888',\n              fontSize: 12\n            }\n          }];\n          axisBottom = {\n            orient: 'bottom',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Median Age',\n            legendPosition: 'middle',\n            legendOffset: 46\n          };\n          axisLeft = {\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Median Household Income',\n            legendPosition: 'middle',\n            legendOffset: -60,\n            format: \">-$,.0f\"\n          };\n          xFormat = \">-.2f\";\n          yFormat = \" >-$,.2f\";\n          break;\n\n        case 4:\n          data = data4;\n          markers = [{\n            axis: 'y',\n            value: 62900,\n            lineStyle: {\n              stroke: '#888',\n              strokeWidth: 2\n            },\n            legend: 'Canadian Median Income $62,900',\n            legendPosition: 'bottom',\n            legendOffset: -60,\n            textStyle: {\n              fill: '#888',\n              fontSize: 12\n            }\n          }];\n          axisBottom = {\n            orient: 'bottom',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Median Age',\n            legendPosition: 'middle',\n            legendOffset: 46\n          };\n          axisLeft = {\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Median Household Income',\n            legendPosition: 'middle',\n            legendOffset: -60,\n            format: \">-$,.0f\"\n          };\n          xFormat = \">-.2f\";\n          yFormat = \" >-$,.2f\";\n          break;\n\n        case 5:\n          data = data5;\n          markers = [{\n            axis: 'y',\n            value: 62900,\n            lineStyle: {\n              stroke: '#888',\n              strokeWidth: 2\n            },\n            legend: 'Canadian Median Income $62,900',\n            legendPosition: 'bottom',\n            legendOffset: -60,\n            textStyle: {\n              fill: '#888',\n              fontSize: 12\n            }\n          }];\n          axisBottom = {\n            orient: 'bottom',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Median Age',\n            legendPosition: 'middle',\n            legendOffset: 46\n          };\n          axisLeft = {\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Median Household Income',\n            legendPosition: 'middle',\n            legendOffset: -60,\n            format: \">-$,.0f\"\n          };\n          xFormat = \">-.2f\";\n          yFormat = \" >-$,.2f\";\n          break;\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(ResponsiveScatterPlot, {\n          data: data,\n          margin: {\n            top: 60,\n            right: 170,\n            bottom: 100,\n            left: 90\n          },\n          xScale: {\n            type: 'linear',\n            min: 0,\n            max: 'auto'\n          },\n          xFormat: xFormat,\n          yScale: {\n            type: 'linear',\n            min: 0,\n            max: 'auto'\n          },\n          yFormat: yFormat // https://stackoverflow.com/questions/67241395/how-to-add-custom-color-theme-in-nivo-chart-settings\n          // /*\n          ,\n          colors: colors_number,\n          colorBy: \"index\",\n          blendMode: \"multiply\",\n          axisTop: null,\n          axisRight: null,\n          axisBottom: axisBottom,\n          onClick: function onClick(data) {\n            _this.props.onChartElementClick(2);\n          },\n          axisLeft: axisLeft,\n          markers: markers,\n          motionConfig: {\n            mass: 87,\n            tension: 427,\n            friction: 500,\n            clamp: false,\n            precision: 0.01,\n            velocity: 0\n          },\n          legends: [{\n            anchor: 'right',\n            direction: 'column',\n            justify: false,\n            translateX: 130,\n            translateY: 0,\n            itemWidth: 100,\n            itemHeight: 12,\n            itemsSpacing: 5,\n            itemDirection: 'left-to-right',\n            symbolSize: 12,\n            symbolShape: 'square',\n            effects: [{\n              on: 'hover',\n              style: {\n                itemOpacity: 1\n              }\n            }]\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this);\n    }\n  }]);\n\n  return Chart;\n}(React.Component);\n\nexport { Chart as default };","map":{"version":3,"sources":["C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/src/components/Chart.js"],"names":["React","ResponsiveScatterPlot","Dropdown","Option","data0","data1","data2","data3","data4","data5","colors_number","colors_density","Chart","data","markers","axisBottom","axisLeft","xFormat","yFormat","props","state","chart","axis","value","lineStyle","stroke","strokeWidth","legend","legendPosition","legendOffset","textStyle","fill","fontSize","orient","tickSize","tickPadding","tickRotation","format","top","right","bottom","left","type","min","max","onChartElementClick","mass","tension","friction","clamp","precision","velocity","anchor","direction","justify","translateX","translateY","itemWidth","itemHeight","itemsSpacing","itemDirection","symbolSize","symbolShape","effects","on","style","itemOpacity","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { ResponsiveScatterPlot } from \"@nivo/scatterplot\";\r\nimport { Dropdown, Option } from \"./Dropdown\";\r\n\r\nimport data0 from \"../data/data.json\";\r\nimport data1 from \"../data/data1.json\";\r\nimport data2 from \"../data/data2.json\";\r\nimport data3 from \"../data/data3.json\";\r\nimport data4 from \"../data/data4.json\";\r\nimport data5 from \"../data/data5.json\";\r\n\r\nlet colors_number  = ['#0707FF','#3737FF','#B7B7FF','#D1D1FF','#D9D9FF','#DBDBFF','#DCDCFF','#E0E0FF','#E3E3FF','#E4E4FF','#ECECFF','#EFEFFF','#F0F0FF','#F1F1FF','#F4F4FF'];\r\nlet colors_density = ['#1515FF','#D3D3FF','#A2A2FF','#B5B5FF','#E9E9FF','#E9E9FF','#EBEBFF','#E1E1FF','#DFDFFF','#F0F0FF','#F3F3FF','#E4E4FF','#F3F3FF','#F5F5FF','#F5F5FF'];\r\n                \r\n//Follows this order for LFL #s & LFL/SqKm:\r\n// Victoria, Saanich, Oak Bay, Esquimalt, North Saanich, Langford, Central Saanich, Colwood, View Royal, Sooke, Metchosin, Sidney, Highlands, Juan de Fuca (Part 1), Juan de Fuca (Part 2)\r\n                        \r\nexport default class Chart extends React.Component {\r\n  render() {\r\n    var data;\r\n    var markers = [];\r\n    var axisBottom = {};\r\n    var axisLeft ={};\r\n    var xFormat = \" >-$,.2f\"\r\n    var yFormat = \" >-$,.2f\"\r\n    switch(this.props.state.chart) {\r\n        case 1:\r\n            data = data1;\r\n            markers = [\r\n                    {\r\n                      axis: 'y',\r\n                      value: 62900,\r\n                      lineStyle: { stroke: '#888', strokeWidth: 2 },\r\n                      legend: 'Canadian Median Income $62,900',\r\n                      legendPosition: 'bottom',\r\n                      legendOffset: -60,\r\n                      textStyle: {\r\n                        fill: '#888',\r\n                        fontSize: 12 ,\r\n                      }\r\n                    }\r\n                ];\r\n            axisBottom = {\r\n                    orient: 'bottom',\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: 'Median Age',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: 46\r\n                }\r\n            axisLeft = {\r\n                    orient: 'left',\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: 'Median Household Income',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: -60,\r\n                    format: \">-$,.0f\"\r\n                }\r\n            xFormat = \">-.2f\";\r\n            yFormat = \" >-$,.2f\";\r\n            break;\r\n        case 2:\r\n            data = data2;\r\n            markers = [\r\n                    {\r\n                      axis: 'y',\r\n                      value: 62900,\r\n                      lineStyle: { stroke: '#888', strokeWidth: 2 },\r\n                      legend: 'Canadian Median Income $62,900',\r\n                      legendPosition: 'bottom',\r\n                      legendOffset: -60,\r\n                      textStyle: {\r\n                        fill: '#888',\r\n                        fontSize: 12 ,\r\n                      }\r\n                    }\r\n                ];\r\n            axisBottom = {\r\n                    orient: 'bottom',\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: 'Median Age',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: 46\r\n                }\r\n            axisLeft = {\r\n                    orient: 'left',\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: 'Median Household Income',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: -60,\r\n                    format: \">-$,.0f\"\r\n                }\r\n            xFormat = \">-.2f\";\r\n            yFormat = \" >-$,.2f\";\r\n            break;\r\n        case 3:\r\n            data = data3;\r\n            markers = [\r\n                    {\r\n                      axis: 'y',\r\n                      value: 62900,\r\n                      lineStyle: { stroke: '#888', strokeWidth: 2 },\r\n                      legend: 'Canadian Median Income $62,900',\r\n                      legendPosition: 'bottom',\r\n                      legendOffset: -60,\r\n                      textStyle: {\r\n                        fill: '#888',\r\n                        fontSize: 12 ,\r\n                      }\r\n                    }\r\n                ];\r\n            axisBottom = {\r\n                    orient: 'bottom',\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: 'Median Age',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: 46\r\n                }\r\n            axisLeft = {\r\n                    orient: 'left',\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: 'Median Household Income',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: -60,\r\n                    format: \">-$,.0f\"\r\n                }\r\n            xFormat = \">-.2f\";\r\n            yFormat = \" >-$,.2f\";\r\n            break;\r\n        case 4:\r\n            data = data4;\r\n            markers = [\r\n                    {\r\n                      axis: 'y',\r\n                      value: 62900,\r\n                      lineStyle: { stroke: '#888', strokeWidth: 2 },\r\n                      legend: 'Canadian Median Income $62,900',\r\n                      legendPosition: 'bottom',\r\n                      legendOffset: -60,\r\n                      textStyle: {\r\n                        fill: '#888',\r\n                        fontSize: 12 ,\r\n                      }\r\n                    }\r\n                ];\r\n            axisBottom = {\r\n                    orient: 'bottom',\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: 'Median Age',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: 46\r\n                }\r\n            axisLeft = {\r\n                    orient: 'left',\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: 'Median Household Income',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: -60,\r\n                    format: \">-$,.0f\"\r\n                }\r\n            xFormat = \">-.2f\";\r\n            yFormat = \" >-$,.2f\";\r\n            break;\r\n        case 5:\r\n            data = data5;\r\n            markers = [\r\n                    {\r\n                      axis: 'y',\r\n                      value: 62900,\r\n                      lineStyle: { stroke: '#888', strokeWidth: 2 },\r\n                      legend: 'Canadian Median Income $62,900',\r\n                      legendPosition: 'bottom',\r\n                      legendOffset: -60,\r\n                      textStyle: {\r\n                        fill: '#888',\r\n                        fontSize: 12 ,\r\n                      }\r\n                    }\r\n                ];\r\n            axisBottom = {\r\n                    orient: 'bottom',\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: 'Median Age',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: 46\r\n                }\r\n            axisLeft = {\r\n                    orient: 'left',\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: 'Median Household Income',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: -60,\r\n                    format: \">-$,.0f\"\r\n                }\r\n            xFormat = \">-.2f\";\r\n            yFormat = \" >-$,.2f\";\r\n            break;   \r\n    }\r\n    return (\r\n        <div className=\"chart\">\r\n            <ResponsiveScatterPlot\r\n                data={data}\r\n                margin={{ top: 60, right: 170, bottom: 100, left: 90 }}\r\n                xScale={{ type: 'linear', min: 0, max: 'auto' }}\r\n                xFormat={ xFormat }\r\n                yScale={{ type: 'linear', min: 0, max: 'auto' }}\r\n                yFormat={ yFormat }\r\n                // https://stackoverflow.com/questions/67241395/how-to-add-custom-color-theme-in-nivo-chart-settings\r\n                // /*\r\n                colors={colors_number}\r\n                colorBy=\"index\"\r\n                blendMode=\"multiply\"\r\n                axisTop={null}\r\n                axisRight={null}\r\n                axisBottom={ axisBottom }\r\n                onClick={(data) => { this.props.onChartElementClick(2); }}\r\n                axisLeft={ axisLeft }\r\n                markers={ markers }\r\n                motionConfig={{\r\n                        mass: 87,\r\n                        tension: 427,\r\n                        friction: 500,\r\n                        clamp: false,\r\n                        precision: 0.01,\r\n                        velocity: 0 }}\r\n                legends={[\r\n                    {\r\n                        anchor: 'right',\r\n                        direction: 'column',\r\n                        justify: false,\r\n                        translateX: 130,\r\n                        translateY: 0,\r\n                        itemWidth: 100,\r\n                        itemHeight: 12,\r\n                        itemsSpacing: 5,\r\n                        itemDirection: 'left-to-right',\r\n                        symbolSize: 12,\r\n                        symbolShape: 'square',\r\n                        effects: [\r\n                            {\r\n                                on: 'hover',\r\n                                style: {\r\n                                    itemOpacity: 1\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                ]}\r\n            />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}