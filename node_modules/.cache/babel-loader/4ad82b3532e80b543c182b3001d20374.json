{"ast":null,"code":"import _slicedToArray from \"C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\mda\\\\Desktop\\\\goGITit\\\\invisible\\\\Info-Viz\\\\src\\\\components\\\\Map.js\";\nimport React from \"react\";\nimport { MapContainer, TileLayer, GeoJSON, LayersControl } from \"react-leaflet\";\nimport Legend from \"./Legend.js\";\nimport { features } from \"../data/CSDs_LFLs.json\";\nimport lflFeatures from \"../data/LFLs_assigned.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Map = /*#__PURE__*/function (_React$Component) {\n  _inherits(Map, _React$Component);\n\n  var _super = _createSuper(Map);\n\n  function Map() {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.defaultStyle = function (feature) {\n      return {\n        fillColor: \"#54c5d5\",\n        weight: 1,\n        opacity: 1,\n        color: \"black\",\n        fillOpacity: 0.6\n      };\n    };\n\n    _this.highlightStyle = function () {\n      return {\n        fillColor: \"#78716e\",\n        weight: 1,\n        opacity: 1,\n        color: \"black\",\n        fillOpacity: 0.6\n      };\n    };\n\n    _this.onEachCSD = function (csd, layer) {\n      var name = csd.properties[\"Census subdivision name\"];\n      layer.bindTooltip(name).openTooltip();\n      layer.on({\n        click: _this.clicked.bind(_assertThisInitialized(_this))\n      });\n    };\n\n    _this.onEachLibrary = function (library, layer) {\n      layer.setOpacity(0);\n      layer.options.interactive = false;\n    };\n\n    _this.clicked = function (ev) {\n      var oldSelected = _this.props.state.selectedFeature;\n      var newSelected = ev.target; // If there is no previously selected feature, style the current selection\n\n      if (oldSelected === null) {\n        newSelected.setStyle(_this.highlightStyle(newSelected.feature));\n      } // Un-highlight the re-selected feature\n      else if (oldSelected.feature.properties[\"Census subdivision name\"] === newSelected.feature.properties[\"Census subdivision name\"]) {\n        newSelected.setStyle(_this.defaultStyle(newSelected.feature));\n        newSelected = null;\n      } // Un-highlight the old selected feature and highlight the new one\n      else if (oldSelected.feature.properties[\"Census subdivision name\"] !== newSelected.feature.properties[\"Census subdivision name\"]) {\n        oldSelected.setStyle(_this.defaultStyle(oldSelected.feature));\n        newSelected.setStyle(_this.highlightStyle(newSelected.feature));\n      } // Update the selected feature in index.js\n\n\n      _this.props.onMapFeatureClick(newSelected); // Show Libraries over the selected feature\n\n\n      _this.showLibraries(); // Update legend info panel\n\n\n      _this.props.state.map._controlCorners.bottomleft.innerHTML = _this.setInfoPanelHTML(newSelected);\n    };\n\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"showLibraries\",\n    value: function showLibraries() {\n      var _this2 = this;\n\n      if (this.props.state.selectedFeature === null) {\n        // Set opacity to 0 for all existing libraries\n        this.props.state.map.eachLayer(function (layer) {\n          if (!layer.feature || layer.feature.properties.Name === undefined) return;\n          layer.setOpacity(0);\n        }, this);\n        return;\n      }\n\n      this.props.state.map.eachLayer(function (layer) {\n        if (!layer.feature || layer.feature.properties.Name === undefined) return;\n\n        if (layer.feature.properties[\"Census subdivision name\"] === _this2.props.state.selectedFeature.feature.properties[\"Census subdivision name\"]) {\n          layer.setOpacity(1);\n        } else {\n          layer.setOpacity(0);\n        }\n      }, this);\n    }\n  }, {\n    key: \"setInfoPanelHTML\",\n    value: function setInfoPanelHTML(target) {\n      if (target == null) {\n        return \"<div class='info leaflet-control'>\" + \"<h2><span>Waiting for Map Feature Selection...</span>&nbsp;</h2>\" + \"</div>\";\n      }\n\n      var info = \"<div class='info leaflet-control'>\";\n      var index = this.props.state.infoPanel.findIndex(function (x) {\n        return x.id === target.feature.properties[\"Census subdivision name\"];\n      });\n      var name = this.props.state.infoPanel[index].id;\n      var data = this.props.state.infoPanel[index].data[0];\n      info += \"<h2><span>\".concat(name, \"</span></h2>\");\n      Object.entries(data).forEach(function (entry) {\n        var _entry = _slicedToArray(entry, 2),\n            key = _entry[0],\n            value = _entry[1];\n\n        if (key === 'x' || key === 'y' || value === name) return;\n        info += \"<h3><span>\".concat(key, \": \").concat(value, \"</span></h4>\");\n      });\n      info += \"</div>\";\n      return info;\n    }\n  }, {\n    key: \"setMap\",\n    value: function setMap(map) {\n      this.props.onMapCreate(map);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [48.4284, -123.7656],\n        zoom: 9,\n        scrollWheelZoom: true,\n        whenCreated: this.setMap.bind(this),\n        children: [/*#__PURE__*/_jsxDEV(LayersControl, {\n          position: \"topright\",\n          children: [/*#__PURE__*/_jsxDEV(LayersControl.BaseLayer, {\n            checked: true,\n            name: \"OpenStreetMap\",\n            children: /*#__PURE__*/_jsxDEV(TileLayer, {\n              attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n              url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n            checked: true,\n            name: \"Little Free Libraries\",\n            children: /*#__PURE__*/_jsxDEV(GeoJSON, {\n              data: lflFeatures,\n              onEachFeature: this.onEachLibrary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n            checked: true,\n            name: \"Census Subdivisions\",\n            children: /*#__PURE__*/_jsxDEV(GeoJSON, {\n              style: this.defaultStyle,\n              data: features,\n              onEachFeature: this.onEachCSD\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Map;\n}(React.Component);\n\nexport { Map as default };","map":{"version":3,"sources":["C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/src/components/Map.js"],"names":["React","MapContainer","TileLayer","GeoJSON","LayersControl","Legend","features","lflFeatures","Map","defaultStyle","feature","fillColor","weight","opacity","color","fillOpacity","highlightStyle","onEachCSD","csd","layer","name","properties","bindTooltip","openTooltip","on","click","clicked","bind","onEachLibrary","library","setOpacity","options","interactive","ev","oldSelected","props","state","selectedFeature","newSelected","target","setStyle","onMapFeatureClick","showLibraries","map","_controlCorners","bottomleft","innerHTML","setInfoPanelHTML","eachLayer","Name","undefined","info","index","infoPanel","findIndex","x","id","data","Object","entries","forEach","entry","key","value","onMapCreate","setMap","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { MapContainer, TileLayer, GeoJSON, LayersControl } from \"react-leaflet\";\r\nimport Legend from \"./Legend.js\";\r\n\r\nimport { features } from \"../data/CSDs_LFLs.json\";\r\nimport lflFeatures  from \"../data/LFLs_assigned.json\";\r\n\r\nexport default class Map extends React.Component {\r\n  defaultStyle = (feature) => {\r\n    return {\r\n      fillColor: \"#54c5d5\",\r\n      weight: 1,\r\n      opacity: 1,\r\n      color: \"black\",\r\n      fillOpacity: 0.6,\r\n    };\r\n  };\r\n\r\n  highlightStyle = () => {\r\n    return {\r\n      fillColor: \"#78716e\",\r\n      weight: 1,\r\n      opacity: 1,\r\n      color: \"black\",\r\n      fillOpacity: 0.6,\r\n    };\r\n  };\r\n\r\n  onEachCSD = (csd, layer) => {\r\n    let name = csd.properties[\"Census subdivision name\"];\r\n\r\n    layer.bindTooltip(name).openTooltip();\r\n\r\n    layer.on({ click: this.clicked.bind(this) });\r\n  };\r\n\r\n  onEachLibrary = (library, layer) => {\r\n    layer.setOpacity(0);\r\n    layer.options.interactive = false\r\n  };\r\n\r\n  clicked = (ev) => {\r\n    let oldSelected = this.props.state.selectedFeature;\r\n    let newSelected = ev.target;\r\n\r\n    // If there is no previously selected feature, style the current selection\r\n    if(oldSelected === null) {\r\n      newSelected.setStyle(this.highlightStyle(newSelected.feature));\r\n      \r\n    } \r\n    // Un-highlight the re-selected feature\r\n    else if (oldSelected.feature.properties[\"Census subdivision name\"] === newSelected.feature.properties[\"Census subdivision name\"]) {\r\n      newSelected.setStyle(this.defaultStyle(newSelected.feature));\r\n      newSelected = null;\r\n    }\r\n    // Un-highlight the old selected feature and highlight the new one\r\n    else if (oldSelected.feature.properties[\"Census subdivision name\"] !== newSelected.feature.properties[\"Census subdivision name\"]) {\r\n      oldSelected.setStyle(this.defaultStyle(oldSelected.feature));\r\n      newSelected.setStyle(this.highlightStyle(newSelected.feature));\r\n    }\r\n\r\n    // Update the selected feature in index.js\r\n    this.props.onMapFeatureClick(newSelected);\r\n\r\n    // Show Libraries over the selected feature\r\n    this.showLibraries();\r\n\r\n    // Update legend info panel\r\n    this.props.state.map._controlCorners.bottomleft.innerHTML = this.setInfoPanelHTML(newSelected);\r\n  } \r\n\r\n  showLibraries() {\r\n    if(this.props.state.selectedFeature === null) {\r\n      // Set opacity to 0 for all existing libraries\r\n      this.props.state.map.eachLayer((layer) => {\r\n         if (!layer.feature || layer.feature.properties.Name === undefined) return;\r\n           layer.setOpacity(0);\r\n      }, this);\r\n      return;\r\n    }\r\n\r\n    this.props.state.map.eachLayer((layer) => {\r\n         if (!layer.feature || layer.feature.properties.Name === undefined) return;\r\n\r\n         if (layer.feature.properties[\"Census subdivision name\"] === this.props.state.selectedFeature.feature.properties[\"Census subdivision name\"]) {\r\n           layer.setOpacity(1);\r\n         } else {\r\n           layer.setOpacity(0);\r\n         }\r\n    }, this);\r\n  }\r\n\r\n  setInfoPanelHTML(target) {\r\n    if(target == null) {\r\n      return (\r\n        `<div class='info leaflet-control'>` +\r\n        `<h2><span>Waiting for Map Feature Selection...</span>&nbsp;</h2>` +\r\n        `</div>`\r\n      )\r\n    }\r\n\r\n    let info = `<div class='info leaflet-control'>`;\r\n    \r\n    let index = this.props.state.infoPanel.findIndex(x => x.id === target.feature.properties[\"Census subdivision name\"]);\r\n\r\n    let name = this.props.state.infoPanel[index].id\r\n\r\n    let data = this.props.state.infoPanel[index].data[0];\r\n\r\n    info += `<h2><span>${name}</span></h2>`;\r\n\r\n    Object.entries(data).forEach(entry => {\r\n      const [key, value] = entry;\r\n      if(key === 'x' || key === 'y' || value === name) return;\r\n\r\n      info += `<h3><span>${key}: ${value}</span></h4>`\r\n    });\r\n\r\n    info += `</div>`;\r\n\r\n    return info;\r\n  }\r\n\r\n  setMap(map) {\r\n    this.props.onMapCreate(map);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MapContainer\r\n        center={[48.4284, -123.7656]}\r\n        zoom={9}\r\n        scrollWheelZoom={true}\r\n        whenCreated={this.setMap.bind(this)}\r\n      >\r\n        <LayersControl position=\"topright\">\r\n          <LayersControl.BaseLayer checked name=\"OpenStreetMap\">\r\n            <TileLayer\r\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n          </LayersControl.BaseLayer>\r\n\r\n          <LayersControl.Overlay checked name=\"Little Free Libraries\">\r\n            <GeoJSON\r\n              data={lflFeatures}\r\n              onEachFeature={this.onEachLibrary}\r\n            />\r\n          </LayersControl.Overlay>\r\n\r\n          <LayersControl.Overlay checked name=\"Census Subdivisions\">\r\n            <GeoJSON\r\n              style={this.defaultStyle}\r\n              data={features}\r\n              onEachFeature={this.onEachCSD}\r\n            />\r\n          </LayersControl.Overlay>\r\n\r\n        </LayersControl>\r\n        <Legend />\r\n      </MapContainer>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}