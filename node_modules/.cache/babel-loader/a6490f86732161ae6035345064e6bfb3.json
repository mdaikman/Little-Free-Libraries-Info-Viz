{"ast":null,"code":"import _classCallCheck from \"C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\mda\\\\Desktop\\\\goGITit\\\\invisible\\\\Info-Viz\\\\src\\\\components\\\\Map.js\";\nimport React from \"react\";\nimport { MapContainer, TileLayer, GeoJSON, LayersControl } from \"react-leaflet\";\nimport Legend from \"./Legend.js\";\nimport { features } from \"../data/CSDs_LFLs.json\"; // import { features } from \"../data/LFLs_assigned.json\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Map = /*#__PURE__*/function (_React$Component) {\n  _inherits(Map, _React$Component);\n\n  var _super = _createSuper(Map);\n\n  function Map() {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.defaultStyle = function (feature) {\n      return {\n        fillColor: \"#54c5d5\",\n        weight: 1,\n        opacity: 1,\n        color: \"black\",\n        fillOpacity: 0.6\n      };\n    };\n\n    _this.highlightStyle = function () {\n      return {\n        fillColor: \"#78716e\",\n        weight: 1,\n        opacity: 1,\n        color: \"black\",\n        fillOpacity: 0.6\n      };\n    };\n\n    _this.onEachCSD = function (csd, layer) {\n      var name = csd.properties[\"Census subdivision name\"];\n      layer.bindTooltip(name).openTooltip();\n      layer.on({\n        mouseover: _this.highlightFeature,\n        mouseout: _this.resetHighlight\n      });\n    };\n\n    _this.highlightFeature = function (e) {\n      var layer = e.target;\n      layer.setStyle({\n        weight: 1,\n        color: \"black\",\n        fillOpacity: 0.6,\n        fillColor: \"#78716e\"\n      });\n    };\n\n    _this.resetHighlight = function (e) {\n      e.target.setStyle(_this.defaultStyle(e.target.feature));\n    };\n\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"setMap\",\n    value: function setMap(map) {\n      this.props.onMapCreate(map);\n    }\n  }, {\n    key: \"handleFeatureSelection\",\n    value: function handleFeatureSelection(layer) {\n      if (!layer.feature) return;\n\n      if (layer.feature.properties[\"Census subdivision name\"] === this.props.state.prevSelected) {\n        layer.setStyle(this.defaultStyle(layer.feature));\n      }\n\n      if (layer.feature.properties[\"Census subdivision name\"] === this.props.state.selected) {\n        layer.setStyle(this.highlightStyle(layer.feature));\n        var csd = layer.feature.properties[\"Census subdivision name\"];\n        var english = layer.feature.properties[\"English\"];\n        this.props.state.map._controlCorners.bottomleft.innerHTML = \"<div class='info leaflet-control'>\" + \"<h2><span>\".concat(csd, \"</span></h2>\") + \"<h4><span>English: \".concat(english, \"</span></h4>\") + \"</div>\";\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.props.state.map != null) {\n        this.props.state.map.eachLayer(function (layer) {\n          _this2.handleFeatureSelection(layer);\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [48.4284, -123.7656],\n        zoom: 9,\n        scrollWheelZoom: true,\n        whenCreated: this.setMap.bind(this),\n        children: [/*#__PURE__*/_jsxDEV(LayersControl, {\n          position: \"topright\",\n          children: [/*#__PURE__*/_jsxDEV(LayersControl.BaseLayer, {\n            checked: true,\n            name: \"OpenStreetMap\",\n            children: /*#__PURE__*/_jsxDEV(TileLayer, {\n              attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n              url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n            checked: true,\n            name: \"Census Subdivisions\",\n            children: /*#__PURE__*/_jsxDEV(GeoJSON, {\n              style: this.defaultStyle,\n              data: features,\n              onEachFeature: this.onEachCSD\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Map;\n}(React.Component);\n\nexport { Map as default };","map":{"version":3,"sources":["C:/Users/mda/Desktop/goGITit/invisible/Info-Viz/src/components/Map.js"],"names":["React","MapContainer","TileLayer","GeoJSON","LayersControl","Legend","features","Map","defaultStyle","feature","fillColor","weight","opacity","color","fillOpacity","highlightStyle","onEachCSD","csd","layer","name","properties","bindTooltip","openTooltip","on","mouseover","highlightFeature","mouseout","resetHighlight","e","target","setStyle","map","props","onMapCreate","state","prevSelected","selected","english","_controlCorners","bottomleft","innerHTML","eachLayer","handleFeatureSelection","setMap","bind","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { MapContainer, TileLayer, GeoJSON, LayersControl } from \"react-leaflet\";\r\nimport Legend from \"./Legend.js\";\r\n\r\nimport { features } from \"../data/CSDs_LFLs.json\";\r\n// import { features } from \"../data/LFLs_assigned.json\";\r\n\r\nexport default class Map extends React.Component {\r\n  defaultStyle = (feature) => {\r\n    return {\r\n      fillColor: \"#54c5d5\",\r\n      weight: 1,\r\n      opacity: 1,\r\n      color: \"black\",\r\n      fillOpacity: 0.6,\r\n    };\r\n  };\r\n\r\n  highlightStyle = () => {\r\n    return {\r\n      fillColor: \"#78716e\",\r\n      weight: 1,\r\n      opacity: 1,\r\n      color: \"black\",\r\n      fillOpacity: 0.6,\r\n    };\r\n  };\r\n\r\n  onEachCSD = (csd, layer) => {\r\n    const name = csd.properties[\"Census subdivision name\"];\r\n\r\n    layer.bindTooltip(name).openTooltip();\r\n\r\n    layer.on({\r\n      mouseover: this.highlightFeature,\r\n      mouseout: this.resetHighlight,\r\n    });\r\n  };\r\n\r\n  highlightFeature = (e) => {\r\n    var layer = e.target;\r\n\r\n    layer.setStyle({\r\n      weight: 1,\r\n      color: \"black\",\r\n      fillOpacity: 0.6,\r\n      fillColor: \"#78716e\",\r\n    });\r\n  };\r\n\r\n  resetHighlight = (e) => {\r\n    e.target.setStyle(this.defaultStyle(e.target.feature));\r\n  };\r\n\r\n  setMap(map) {\r\n    this.props.onMapCreate(map);\r\n  }\r\n\r\n  handleFeatureSelection(layer) {\r\n    if (!layer.feature) return;\r\n\r\n    if (layer.feature.properties[\"Census subdivision name\"] === this.props.state.prevSelected) {\r\n      layer.setStyle(this.defaultStyle(layer.feature));\r\n    }\r\n\r\n    if (layer.feature.properties[\"Census subdivision name\"] === this.props.state.selected) {\r\n      layer.setStyle(this.highlightStyle(layer.feature));\r\n\r\n      let csd = layer.feature.properties[\"Census subdivision name\"];\r\n      let english = layer.feature.properties[\"English\"];\r\n\r\n      this.props.state.map._controlCorners.bottomleft.innerHTML =\r\n        `<div class='info leaflet-control'>` +\r\n        `<h2><span>${csd}</span></h2>` +\r\n        `<h4><span>English: ${english}</span></h4>` +\r\n        `</div>`;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.props.state.map != null) {\r\n      this.props.state.map.eachLayer((layer) => {\r\n        this.handleFeatureSelection(layer);\r\n      }, this);\r\n    }\r\n\r\n    return (\r\n      <MapContainer\r\n        center={[48.4284, -123.7656]}\r\n        zoom={9}\r\n        scrollWheelZoom={true}\r\n        whenCreated={this.setMap.bind(this)}\r\n      >\r\n        <LayersControl position=\"topright\">\r\n          <LayersControl.BaseLayer checked name=\"OpenStreetMap\">\r\n            <TileLayer\r\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n          </LayersControl.BaseLayer>\r\n\r\n          <LayersControl.Overlay checked name=\"Census Subdivisions\">\r\n            <GeoJSON\r\n              style={this.defaultStyle}\r\n              data={features}\r\n              onEachFeature={this.onEachCSD}\r\n            />\r\n          </LayersControl.Overlay>\r\n        </LayersControl>\r\n        <Legend />\r\n      </MapContainer>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}