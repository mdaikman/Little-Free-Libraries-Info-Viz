{"version":3,"file":"nivo-scatterplot.es.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/compute.ts","../src/hooks.ts","../src/Node.tsx","../src/Tooltip.tsx","../src/props.tsx","../src/ScatterPlotAnnotations.tsx","../src/Nodes.tsx","../src/Mesh.tsx","../src/ScatterPlot.tsx","../src/ResponsiveScatterPlot.tsx","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/ScatterPlotCanvas.tsx","../src/ResponsiveScatterPlotCanvas.tsx"],"sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import get from 'lodash/get'\nimport isString from 'lodash/isString'\nimport isNumber from 'lodash/isNumber'\nimport isPlainObject from 'lodash/isPlainObject'\nimport { scaleLinear } from 'd3-scale'\nimport { ComputedSerie } from '@nivo/scales'\nimport {\n    ScatterPlotCommonProps,\n    ScatterPlotDatum,\n    ScatterPlotNodeData,\n    ScatterPlotNodeDynamicSizeSpec,\n} from './types'\n\nconst isDynamicSizeSpec = <RawDatum extends ScatterPlotDatum>(\n    size: ScatterPlotCommonProps<RawDatum>['nodeSize']\n): size is ScatterPlotNodeDynamicSizeSpec => isPlainObject(size)\n\nexport const getNodeSizeGenerator = <RawDatum extends ScatterPlotDatum>(\n    size: ScatterPlotCommonProps<RawDatum>['nodeSize']\n) => {\n    if (typeof size === 'function') return size\n    if (isNumber(size)) return () => size\n    if (isDynamicSizeSpec<RawDatum>(size)) {\n        if (!isString(size.key)) {\n            throw new Error(\n                'symbolSize is invalid, key should be a string pointing to the property to use to determine node size'\n            )\n        }\n        if (!Array.isArray(size.values) || size.values.length !== 2) {\n            throw new Error(\n                'symbolSize is invalid, values spec should be an array containing two values, min and max'\n            )\n        }\n        if (!Array.isArray(size.sizes) || size.sizes.length !== 2) {\n            throw new Error(\n                'symbolSize is invalid, sizes spec should be an array containing two values, min and max'\n            )\n        }\n\n        const sizeScale = scaleLinear()\n            .domain([size.values[0], size.values[1]])\n            .range([size.sizes[0], size.sizes[1]])\n\n        return (datum: Omit<ScatterPlotNodeData<RawDatum>, 'size' | 'color'>) =>\n            sizeScale(get(datum, size.key))\n    }\n\n    throw new Error('nodeSize is invalid, it should be either a function, a number or an object')\n}\n\nexport const computePoints = <RawDatum extends ScatterPlotDatum>({\n    series,\n    formatX,\n    formatY,\n    getNodeId,\n}: {\n    series: ComputedSerie<{ id: string | number }, RawDatum>[]\n    formatX: (value: RawDatum['x']) => string | number\n    formatY: (value: RawDatum['x']) => string | number\n    getNodeId: (d: Omit<ScatterPlotNodeData<RawDatum>, 'id' | 'size' | 'color'>) => string\n}): Omit<ScatterPlotNodeData<RawDatum>, 'size' | 'color'>[] => {\n    const points: Omit<ScatterPlotNodeData<RawDatum>, 'size' | 'color'>[] = []\n\n    series.forEach(serie => {\n        serie.data.forEach((d, serieIndex) => {\n            const point: Omit<ScatterPlotNodeData<RawDatum>, 'id' | 'size' | 'color'> = {\n                index: points.length,\n                serieIndex,\n                serieId: serie.id,\n                x: d.position.x as number,\n                xValue: d.data.x,\n                formattedX: formatX(d.data.x),\n                y: d.position.y as number,\n                yValue: d.data.y,\n                formattedY: formatY(d.data.y),\n                data: d.data,\n            }\n\n            points.push({\n                ...point,\n                id: getNodeId(point),\n            })\n        })\n    })\n\n    return points\n}\n","import { useMemo } from 'react'\nimport { useValueFormatter, usePropertyAccessor } from '@nivo/core'\nimport { useOrdinalColorScale } from '@nivo/colors'\nimport { computeXYScalesForSeries } from '@nivo/scales'\nimport { useAnnotations } from '@nivo/annotations'\nimport { computePoints, getNodeSizeGenerator } from './compute'\nimport {\n    ScatterPlotCommonProps,\n    ScatterPlotDataProps,\n    ScatterPlotDatum,\n    ScatterPlotNodeData,\n} from './types'\n\nconst useNodeSize = <RawDatum extends ScatterPlotDatum>(\n    size: ScatterPlotCommonProps<RawDatum>['nodeSize']\n) => useMemo(() => getNodeSizeGenerator<RawDatum>(size), [size])\n\nexport const useScatterPlot = <RawDatum extends ScatterPlotDatum>({\n    data,\n    xScaleSpec,\n    xFormat,\n    yScaleSpec,\n    yFormat,\n    width,\n    height,\n    nodeId,\n    nodeSize,\n    colors,\n}: {\n    data: ScatterPlotDataProps<RawDatum>['data']\n    xScaleSpec: ScatterPlotCommonProps<RawDatum>['xScale']\n    xFormat?: ScatterPlotCommonProps<RawDatum>['xFormat']\n    yScaleSpec: ScatterPlotCommonProps<RawDatum>['yScale']\n    yFormat?: ScatterPlotCommonProps<RawDatum>['yFormat']\n    width: number\n    height: number\n    nodeId: ScatterPlotCommonProps<RawDatum>['nodeId']\n    nodeSize: ScatterPlotCommonProps<RawDatum>['nodeSize']\n    colors: ScatterPlotCommonProps<RawDatum>['colors']\n}) => {\n    const { series, xScale, yScale } = useMemo(\n        () =>\n            computeXYScalesForSeries<{ id: string | number }, RawDatum>(\n                data,\n                xScaleSpec,\n                yScaleSpec,\n                width,\n                height\n            ),\n        [data, xScaleSpec, yScaleSpec, width, height]\n    )\n\n    const formatX = useValueFormatter(xFormat)\n    const formatY = useValueFormatter(yFormat)\n    const getNodeId = usePropertyAccessor(nodeId)\n    const rawNodes = useMemo(\n        () => computePoints<RawDatum>({ series, formatX, formatY, getNodeId }),\n        [series, formatX, formatY, getNodeId]\n    )\n\n    const getNodeSize = useNodeSize<RawDatum>(nodeSize)\n\n    const getColor = useOrdinalColorScale(colors, 'serieId')\n\n    const nodes: ScatterPlotNodeData<RawDatum>[] = useMemo(\n        () =>\n            rawNodes.map(rawNode => ({\n                ...rawNode,\n                size: getNodeSize(rawNode),\n                color: getColor({ serieId: rawNode.serieId }),\n            })),\n        [rawNodes, getNodeSize, getColor]\n    )\n\n    const legendData = useMemo(\n        () =>\n            series.map(serie => ({\n                id: serie.id,\n                label: serie.id,\n                color: getColor({ serieId: serie.id }),\n            })),\n        [series, getColor]\n    )\n\n    return {\n        xScale,\n        yScale,\n        nodes,\n        legendData,\n    }\n}\n\nexport const useScatterPlotAnnotations = <RawDatum extends ScatterPlotDatum>(\n    items: ScatterPlotNodeData<RawDatum>[],\n    annotations: ScatterPlotCommonProps<RawDatum>['annotations']\n) =>\n    useAnnotations<ScatterPlotNodeData<RawDatum>>({\n        data: items,\n        annotations,\n        getPosition: (node: ScatterPlotNodeData<RawDatum>) => ({\n            x: node.x,\n            y: node.y,\n        }),\n        getDimensions: (node: ScatterPlotNodeData<RawDatum>) => ({\n            size: node.size,\n            width: node.size,\n            height: node.size,\n        }),\n    })\n","import { animated } from '@react-spring/web'\nimport { ScatterPlotDatum, ScatterPlotNodeProps } from './types'\nimport { useCallback } from 'react'\n\nconst interpolateRadius = (size: number) => size / 2\n\nexport const Node = <RawDatum extends ScatterPlotDatum>({\n    node,\n    style,\n    blendMode,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n}: ScatterPlotNodeProps<RawDatum>) => {\n    const handleMouseEnter = useCallback(event => onMouseEnter?.(node, event), [node, onMouseEnter])\n    const handleMouseMove = useCallback(event => onMouseMove?.(node, event), [node, onMouseMove])\n    const handleMouseLeave = useCallback(event => onMouseLeave?.(node, event), [node, onMouseLeave])\n    const handleClick = useCallback(event => onClick?.(node, event), [node, onClick])\n\n    return (\n        <animated.circle\n            cx={style.x}\n            cy={style.y}\n            r={style.size.to(interpolateRadius)}\n            fill={style.color}\n            style={{ mixBlendMode: blendMode }}\n            onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n            onMouseMove={isInteractive ? handleMouseMove : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { ScatterPlotTooltipProps, ScatterPlotDatum } from './types'\n\nexport const Tooltip = <RawDatum extends ScatterPlotDatum>({\n    node,\n}: ScatterPlotTooltipProps<RawDatum>) => (\n    <BasicTooltip\n        id={node.serieId}\n        value={`x: ${node.formattedX}, y: ${node.formattedY}`}\n        enableChip={true}\n        color={node.color}\n    />\n)\n","import { CssMixBlendMode } from '@nivo/core'\nimport { Node } from './Node'\nimport { Tooltip } from './Tooltip'\nimport {\n    ScatterPlotCommonProps,\n    ScatterPlotDatum,\n    ScatterPlotLayerId,\n    ScatterPlotNodeData,\n} from './types'\n\nexport const commonDefaultProps = {\n    xScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    } as ScatterPlotCommonProps<ScatterPlotDatum>['xScale'],\n    yScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    } as ScatterPlotCommonProps<ScatterPlotDatum>['yScale'],\n\n    enableGridX: true,\n    enableGridY: true,\n    axisBottom: {},\n    axisLeft: {},\n\n    nodeId: (({ serieId, index }) => `${serieId}.${index}`) as ScatterPlotCommonProps<\n        ScatterPlotDatum\n    >['nodeId'],\n    nodeSize: 9,\n    nodeComponent: Node,\n\n    colors: { scheme: 'nivo' } as ScatterPlotCommonProps<ScatterPlotDatum>['colors'],\n\n    isInteractive: true,\n    debugMesh: false,\n\n    tooltip: Tooltip,\n\n    markers: [],\n\n    legends: [],\n\n    annotations: [],\n}\n\nexport const svgDefaultProps = {\n    ...commonDefaultProps,\n    blendMode: 'normal' as CssMixBlendMode,\n    layers: [\n        'grid',\n        'axes',\n        'nodes',\n        'markers',\n        'mesh',\n        'legends',\n        'annotations',\n    ] as ScatterPlotLayerId[],\n    role: 'img',\n    useMesh: true,\n    animate: true,\n    motionConfig: 'default',\n}\n\nexport const canvasDefaultProps = {\n    ...commonDefaultProps,\n    layers: ['grid', 'axes', 'nodes', 'mesh', 'legends', 'annotations'] as ScatterPlotLayerId[],\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n    renderNode: (ctx: CanvasRenderingContext2D, node: ScatterPlotNodeData<ScatterPlotDatum>) => {\n        ctx.beginPath()\n        ctx.arc(node.x, node.y, node.size / 2, 0, 2 * Math.PI)\n        ctx.fillStyle = node.color\n        ctx.fill()\n    },\n}\n","import { Annotation } from '@nivo/annotations'\nimport { useScatterPlotAnnotations } from './hooks'\nimport { ScatterPlotCommonProps, ScatterPlotDatum, ScatterPlotNodeData } from './types'\n\ninterface ScatterPlotAnnotationsProps<RawDatum extends ScatterPlotDatum> {\n    nodes: ScatterPlotNodeData<RawDatum>[]\n    annotations: ScatterPlotCommonProps<RawDatum>['annotations']\n}\n\nexport const ScatterPlotAnnotations = <RawDatum extends ScatterPlotDatum>({\n    nodes,\n    annotations,\n}: ScatterPlotAnnotationsProps<RawDatum>) => {\n    const boundAnnotations = useScatterPlotAnnotations<RawDatum>(nodes, annotations)\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","import { useTransition } from '@react-spring/web'\nimport { CssMixBlendMode, useMotionConfig } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport {\n    ScatterPlotCommonProps,\n    ScatterPlotDatum,\n    ScatterPlotNode,\n    ScatterPlotNodeData,\n} from './types'\nimport { createElement, useCallback } from 'react'\n\ninterface NodesProps<RawDatum extends ScatterPlotDatum> {\n    nodes: ScatterPlotNodeData<RawDatum>[]\n    nodeComponent: ScatterPlotNode<RawDatum>\n    isInteractive: boolean\n    onMouseEnter?: ScatterPlotCommonProps<RawDatum>['onMouseEnter']\n    onMouseMove?: ScatterPlotCommonProps<RawDatum>['onMouseMove']\n    onMouseLeave?: ScatterPlotCommonProps<RawDatum>['onMouseLeave']\n    onClick?: ScatterPlotCommonProps<RawDatum>['onClick']\n    tooltip: ScatterPlotCommonProps<RawDatum>['tooltip']\n    blendMode: CssMixBlendMode\n}\n\nconst getNodeKey = <RawDatum extends ScatterPlotDatum>(node: ScatterPlotNodeData<RawDatum>) =>\n    node.id\nconst regularTransition = <RawDatum extends ScatterPlotDatum>(\n    node: ScatterPlotNodeData<RawDatum>\n) => ({\n    x: node.x,\n    y: node.y,\n    size: node.size,\n    color: node.color,\n})\nconst leaveTransition = <RawDatum extends ScatterPlotDatum>(\n    node: ScatterPlotNodeData<RawDatum>\n) => ({\n    x: node.x,\n    y: node.y,\n    size: 0,\n    color: node.color,\n})\n\nexport const Nodes = <RawDatum extends ScatterPlotDatum>({\n    nodes,\n    nodeComponent,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    blendMode,\n}: NodesProps<RawDatum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const transition = useTransition<\n        ScatterPlotNodeData<RawDatum>,\n        {\n            x: number\n            y: number\n            size: number\n            color: string\n        }\n    >(nodes, {\n        keys: getNodeKey,\n        from: regularTransition,\n        enter: regularTransition,\n        update: regularTransition,\n        leave: leaveTransition,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseEnter = useCallback(\n        (node, event) => {\n            showTooltipFromEvent(createElement(tooltip, { node }), event)\n            onMouseEnter?.(node, event)\n        },\n        [tooltip, showTooltipFromEvent, onMouseEnter]\n    )\n    const handleMouseMove = useCallback(\n        (node, event) => {\n            showTooltipFromEvent(createElement(tooltip, { node }), event)\n            onMouseMove?.(node, event)\n        },\n        [tooltip, showTooltipFromEvent, onMouseMove]\n    )\n    const handleMouseLeave = useCallback(\n        (node, event) => {\n            hideTooltip()\n            onMouseLeave?.(node, event)\n        },\n        [hideTooltip, onMouseLeave]\n    )\n    const handleClick = useCallback((node, event) => onClick?.(node, event), [onClick])\n\n    return (\n        <>\n            {transition((style, node) =>\n                createElement(nodeComponent, {\n                    node,\n                    style,\n                    blendMode,\n                    isInteractive,\n                    onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n                    onMouseMove: isInteractive ? handleMouseMove : undefined,\n                    onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n                    onClick: isInteractive ? handleClick : undefined,\n                })\n            )}\n        </>\n    )\n}\n","import { createElement, useCallback } from 'react'\nimport { useTooltip } from '@nivo/tooltip'\nimport { Mesh as BaseMesh } from '@nivo/voronoi'\nimport { ScatterPlotCommonProps, ScatterPlotDatum, ScatterPlotNodeData } from './types'\n\ninterface MeshProps<RawDatum extends ScatterPlotDatum> {\n    nodes: ScatterPlotNodeData<RawDatum>[]\n    width: number\n    height: number\n    onMouseEnter?: ScatterPlotCommonProps<RawDatum>['onMouseEnter']\n    onMouseMove?: ScatterPlotCommonProps<RawDatum>['onMouseMove']\n    onMouseLeave?: ScatterPlotCommonProps<RawDatum>['onMouseLeave']\n    onClick?: ScatterPlotCommonProps<RawDatum>['onClick']\n    tooltip: ScatterPlotCommonProps<RawDatum>['tooltip']\n    debug: boolean\n}\n\nexport const Mesh = <RawDatum extends ScatterPlotDatum>({\n    nodes,\n    width,\n    height,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    debug,\n}: MeshProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (node: ScatterPlotNodeData<RawDatum>, event) => {\n            showTooltipFromEvent(createElement(tooltip, { node }), event)\n            onMouseEnter && onMouseEnter(node, event)\n        },\n        [showTooltipFromEvent, tooltip, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        (node: ScatterPlotNodeData<RawDatum>, event) => {\n            showTooltipFromEvent(createElement(tooltip, { node }), event)\n            onMouseMove && onMouseMove(node, event)\n        },\n        [showTooltipFromEvent, tooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (node: ScatterPlotNodeData<RawDatum>, event) => {\n            hideTooltip()\n            onMouseLeave && onMouseLeave(node, event)\n        },\n        [hideTooltip, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        (node: ScatterPlotNodeData<RawDatum>, event) => {\n            onClick && onClick(node, event)\n        },\n        [onClick]\n    )\n\n    return (\n        <BaseMesh\n            nodes={nodes}\n            width={width}\n            height={height}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n            debug={debug}\n        />\n    )\n}\n","import { createElement, Fragment, ReactNode, useMemo } from 'react'\nimport { SvgWrapper, Container, useDimensions, CartesianMarkers } from '@nivo/core'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { useScatterPlot } from './hooks'\nimport { svgDefaultProps } from './props'\nimport { ScatterPlotAnnotations } from './ScatterPlotAnnotations'\nimport { Nodes } from './Nodes'\nimport { Mesh } from './Mesh'\nimport { ScatterPlotDatum, ScatterPlotLayerId, ScatterPlotSvgProps } from './types'\n\ntype InnerScatterPlotProps<RawDatum extends ScatterPlotDatum> = Omit<\n    ScatterPlotSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerScatterPlot = <RawDatum extends ScatterPlotDatum>({\n    data,\n    xScale: xScaleSpec = svgDefaultProps.xScale,\n    xFormat,\n    yScale: yScaleSpec = svgDefaultProps.yScale,\n    yFormat,\n    width,\n    height,\n    margin: partialMargin,\n    layers = svgDefaultProps.layers,\n    colors = svgDefaultProps.colors,\n    blendMode = svgDefaultProps.blendMode,\n    nodeId = svgDefaultProps.nodeId,\n    nodeSize = svgDefaultProps.nodeSize,\n    nodeComponent = svgDefaultProps.nodeComponent,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    annotations = svgDefaultProps.annotations,\n    isInteractive = svgDefaultProps.isInteractive,\n    useMesh = svgDefaultProps.useMesh,\n    debugMesh = svgDefaultProps.debugMesh,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip = svgDefaultProps.tooltip,\n    markers = svgDefaultProps.markers,\n    legends = svgDefaultProps.legends,\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerScatterPlotProps<RawDatum>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { xScale, yScale, nodes, legendData } = useScatterPlot<RawDatum>({\n        data,\n        xScaleSpec,\n        xFormat,\n        yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        nodeId,\n        nodeSize,\n        colors,\n    })\n\n    const customLayerProps = useMemo(\n        () => ({\n            xScale,\n            yScale,\n            nodes,\n            margin,\n            innerWidth,\n            innerHeight,\n            outerWidth,\n            outerHeight,\n        }),\n        [xScale, yScale, nodes, margin, innerWidth, innerHeight, outerWidth, outerHeight]\n    )\n\n    const layerById: Record<ScatterPlotLayerId, ReactNode> = {\n        grid: null,\n        axes: null,\n        nodes: null,\n        markers: null,\n        mesh: null,\n        annotations: null,\n        legends: null,\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? (xScale as any) : null}\n                yScale={enableGridY ? (yScale as any) : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale as any}\n                yScale={yScale as any}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (layers.includes('nodes')) {\n        layerById.nodes = (\n            <Nodes<RawDatum>\n                key=\"nodes\"\n                nodes={nodes}\n                nodeComponent={nodeComponent}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n                blendMode={blendMode}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n            />\n        )\n    }\n\n    if (layers.includes('markers')) {\n        layerById.markers = (\n            <CartesianMarkers<RawDatum['x'], RawDatum['y']>\n                key=\"markers\"\n                markers={markers}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale as (value: RawDatum['x']) => number}\n                yScale={yScale as (value: RawDatum['y']) => number}\n            />\n        )\n    }\n\n    if (layers.includes('mesh') && isInteractive && useMesh) {\n        layerById.mesh = (\n            <Mesh<RawDatum>\n                key=\"mesh\"\n                nodes={nodes}\n                width={innerWidth}\n                height={innerHeight}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                tooltip={tooltip}\n                debug={debugMesh}\n            />\n        )\n    }\n\n    if (layers.includes('annotations')) {\n        layerById.annotations = (\n            <ScatterPlotAnnotations<RawDatum>\n                key=\"annotations\"\n                nodes={nodes}\n                annotations={annotations}\n            />\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = legends.map((legend, i) => (\n            <BoxLegendSvg\n                key={i}\n                {...legend}\n                containerWidth={innerWidth}\n                containerHeight={innerHeight}\n                data={legendData}\n            />\n        ))\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'string' && layerById[layer] !== undefined) {\n                    return layerById[layer]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, customLayerProps)}</Fragment>\n                }\n\n                throw new Error(`Unknown layer (${layer})`)\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const ScatterPlot = <RawDatum extends ScatterPlotDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: ScatterPlotSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerScatterPlot<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { ScatterPlot } from './ScatterPlot'\nimport { ScatterPlotDatum, ScatterPlotSvgProps } from './types'\n\nexport const ResponsiveScatterPlot = <RawDatum extends ScatterPlotDatum>(\n    props: Omit<ScatterPlotSvgProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ScatterPlot<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { createElement, useRef, useState, useEffect, useCallback, useMemo } from 'react'\nimport { Container, useDimensions, useTheme, getRelativeCursor, isCursorInRect } from '@nivo/core'\nimport { renderAnnotationsToCanvas } from '@nivo/annotations'\nimport { CanvasAxisProp, renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useVoronoiMesh, renderVoronoiToCanvas, renderVoronoiCellToCanvas } from '@nivo/voronoi'\nimport { canvasDefaultProps, svgDefaultProps } from './props'\nimport { useScatterPlot, useScatterPlotAnnotations } from './hooks'\nimport { ScatterPlotCanvasProps, ScatterPlotDatum, ScatterPlotNodeData } from './types'\n\ntype InnerScatterPlotCanvasProps<RawDatum extends ScatterPlotDatum> = Omit<\n    ScatterPlotCanvasProps<RawDatum>,\n    'renderWrapper' | 'theme'\n>\n\nconst InnerScatterPlotCanvas = <RawDatum extends ScatterPlotDatum>({\n    data,\n    xScale: xScaleSpec = canvasDefaultProps.xScale,\n    xFormat,\n    yScale: yScaleSpec = canvasDefaultProps.yScale,\n    yFormat,\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio = canvasDefaultProps.pixelRatio,\n    layers = canvasDefaultProps.layers,\n    colors = canvasDefaultProps.colors,\n    nodeId = svgDefaultProps.nodeId,\n    nodeSize = canvasDefaultProps.nodeSize,\n    renderNode = canvasDefaultProps.renderNode,\n    enableGridX = canvasDefaultProps.enableGridX,\n    gridXValues,\n    enableGridY = canvasDefaultProps.enableGridY,\n    gridYValues,\n    axisTop,\n    axisRight,\n    axisBottom = canvasDefaultProps.axisBottom,\n    axisLeft = canvasDefaultProps.axisLeft,\n    annotations = canvasDefaultProps.annotations,\n    isInteractive = canvasDefaultProps.isInteractive,\n    debugMesh = canvasDefaultProps.debugMesh,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip = canvasDefaultProps.tooltip,\n    legends = canvasDefaultProps.legends,\n}: InnerScatterPlotCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n    const theme = useTheme()\n    const [currentNode, setCurrentNode] = useState<ScatterPlotNodeData<RawDatum> | null>(null)\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { xScale, yScale, nodes, legendData } = useScatterPlot<RawDatum>({\n        data,\n        xScaleSpec,\n        xFormat,\n        yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        nodeId,\n        nodeSize,\n        colors,\n    })\n\n    const boundAnnotations = useScatterPlotAnnotations<RawDatum>(nodes, annotations)\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points: nodes,\n        width: innerWidth,\n        height: innerHeight,\n        debug: debugMesh,\n    })\n\n    const customLayerProps = useMemo(\n        () => ({\n            xScale,\n            yScale,\n            nodes,\n            margin,\n            innerWidth,\n            innerHeight,\n            outerWidth,\n            outerHeight,\n        }),\n        [xScale, yScale, nodes, margin, innerWidth, innerHeight, outerWidth, outerHeight]\n    )\n\n    useEffect(() => {\n        if (!canvasEl.current) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'grid') {\n                ctx.lineWidth = theme.grid.line.strokeWidth as number\n                ctx.strokeStyle = theme.grid.line.stroke as string\n\n                enableGridX &&\n                    renderGridLinesToCanvas<RawDatum['x']>(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: xScale as any,\n                        axis: 'x',\n                        values: gridXValues,\n                    })\n\n                enableGridY &&\n                    renderGridLinesToCanvas<RawDatum['y']>(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: yScale as any,\n                        axis: 'y',\n                        values: gridYValues,\n                    })\n            } else if (layer === 'annotations') {\n                renderAnnotationsToCanvas<ScatterPlotNodeData<RawDatum>>(ctx, {\n                    annotations: boundAnnotations as any,\n                    theme,\n                })\n            } else if (layer === 'axes') {\n                renderAxesToCanvas<RawDatum['x'], RawDatum['y']>(ctx, {\n                    xScale: xScale as any,\n                    yScale: yScale as any,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop as CanvasAxisProp<RawDatum['x']>,\n                    right: axisRight as CanvasAxisProp<RawDatum['y']>,\n                    bottom: axisBottom as CanvasAxisProp<RawDatum['x']>,\n                    left: axisLeft as CanvasAxisProp<RawDatum['y']>,\n                    theme,\n                })\n            } else if (layer === 'nodes') {\n                nodes.forEach(node => {\n                    renderNode(ctx, node)\n                })\n            } else if (layer === 'mesh') {\n                if (debugMesh === true) {\n                    renderVoronoiToCanvas(ctx, voronoi!)\n                    if (currentNode) {\n                        renderVoronoiCellToCanvas(ctx, voronoi!, currentNode.index)\n                    }\n                }\n            } else if (layer === 'legends') {\n                legends.forEach(legend => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data: legendData,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            } else if (typeof layer === 'function') {\n                layer(ctx, customLayerProps)\n            } else {\n                throw new Error(`Invalid layer: ${layer}`)\n            }\n        })\n    }, [\n        canvasEl,\n        innerWidth,\n        innerHeight,\n        outerWidth,\n        outerHeight,\n        margin.top,\n        margin.left,\n        pixelRatio,\n        renderNode,\n        layers,\n        customLayerProps,\n        theme,\n        xScale,\n        yScale,\n        nodes,\n        enableGridX,\n        enableGridY,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        legends,\n        legendData,\n        debugMesh,\n        voronoi,\n        currentNode,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const getNodeFromMouseEvent = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current!, event)\n            if (!isCursorInRect(margin.left, margin.top, innerWidth, innerHeight, x, y)) return null\n\n            const nodeIndex = delaunay.find(x - margin.left, y - margin.top)\n            return nodes[nodeIndex]\n        },\n        [canvasEl, margin, innerWidth, innerHeight, delaunay]\n    )\n\n    const handleMouseHover = useCallback(\n        event => {\n            const node = getNodeFromMouseEvent(event)\n            setCurrentNode(node)\n\n            if (node) {\n                showTooltipFromEvent(createElement(tooltip, { node }), event)\n                if (currentNode && currentNode.id !== node.id) {\n                    onMouseLeave && onMouseLeave(currentNode, event)\n                    onMouseEnter && onMouseEnter(node, event)\n                }\n                if (!currentNode) {\n                    onMouseEnter && onMouseEnter(node, event)\n                }\n                onMouseMove && onMouseMove(node, event)\n            } else {\n                hideTooltip()\n                currentNode && onMouseLeave && onMouseLeave(currentNode, event)\n            }\n        },\n        [\n            getNodeFromMouseEvent,\n            currentNode,\n            setCurrentNode,\n            showTooltipFromEvent,\n            hideTooltip,\n            tooltip,\n            onMouseEnter,\n            onMouseMove,\n            onMouseLeave,\n        ]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrentNode(null)\n            currentNode && onMouseLeave && onMouseLeave(currentNode, event)\n        },\n        [hideTooltip, currentNode, setCurrentNode, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            if (onClick) {\n                const node = getNodeFromMouseEvent(event)\n                node && onClick(node, event)\n            }\n        },\n        [getNodeFromMouseEvent, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const ScatterPlotCanvas = <RawDatum extends ScatterPlotDatum>({\n    isInteractive,\n    renderWrapper,\n    theme,\n    ...props\n}: ScatterPlotCanvasProps<RawDatum>) => (\n    <Container {...{ isInteractive, renderWrapper, theme }} animate={false}>\n        <InnerScatterPlotCanvas<RawDatum> {...props} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { ScatterPlotCanvas } from './ScatterPlotCanvas'\nimport { ScatterPlotCanvasProps, ScatterPlotDatum } from './types'\n\nexport const ResponsiveScatterPlotCanvas = <RawDatum extends ScatterPlotDatum>(\n    props: Omit<ScatterPlotCanvasProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => (\n            <ScatterPlotCanvas<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n"],"names":["objectWithoutPropertiesLoose","defineProperty","isDynamicSizeSpec","size","isPlainObject","getNodeSizeGenerator","isNumber","isString","key","Error","Array","isArray","values","length","sizes","sizeScale","scaleLinear","domain","range","datum","get","computePoints","series","formatX","formatY","getNodeId","points","forEach","serie","data","d","serieIndex","point","index","serieId","id","x","position","xValue","formattedX","y","yValue","formattedY","push","useNodeSize","useMemo","useScatterPlot","xScaleSpec","xFormat","yScaleSpec","yFormat","width","height","nodeId","nodeSize","colors","computeXYScalesForSeries","xScale","yScale","useValueFormatter","usePropertyAccessor","rawNodes","getNodeSize","getColor","useOrdinalColorScale","nodes","map","rawNode","color","legendData","label","useScatterPlotAnnotations","items","annotations","useAnnotations","getPosition","node","getDimensions","interpolateRadius","Node","style","blendMode","isInteractive","onMouseEnter","onMouseMove","onMouseLeave","onClick","handleMouseEnter","useCallback","event","handleMouseMove","handleMouseLeave","handleClick","_jsx","to","mixBlendMode","undefined","Tooltip","commonDefaultProps","type","min","max","enableGridX","enableGridY","axisBottom","axisLeft","nodeComponent","scheme","debugMesh","tooltip","markers","legends","svgDefaultProps","layers","role","useMesh","animate","motionConfig","canvasDefaultProps","pixelRatio","window","devicePixelRatio","renderNode","ctx","beginPath","arc","Math","PI","fillStyle","fill","ScatterPlotAnnotations","boundAnnotations","annotation","i","getNodeKey","regularTransition","leaveTransition","Nodes","useMotionConfig","springConfig","config","transition","useTransition","keys","from","enter","update","leave","immediate","useTooltip","showTooltipFromEvent","hideTooltip","createElement","Mesh","debug","BaseMesh","InnerScatterPlot","partialMargin","margin","gridXValues","gridYValues","axisTop","axisRight","ariaLabel","ariaLabelledBy","ariaDescribedBy","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","customLayerProps","layerById","grid","axes","mesh","includes","legend","layer","Fragment","ScatterPlot","theme","renderWrapper","otherProps","ResponsiveScatterPlot","props","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","InnerScatterPlotCanvas","canvasEl","useRef","useTheme","useState","currentNode","setCurrentNode","useVoronoiMesh","delaunay","voronoi","useEffect","current","getContext","scale","background","fillRect","translate","left","top","lineWidth","line","strokeWidth","strokeStyle","stroke","renderGridLinesToCanvas","axis","renderAnnotationsToCanvas","renderAxesToCanvas","right","bottom","renderVoronoiToCanvas","renderVoronoiCellToCanvas","renderLegendToCanvas","containerWidth","containerHeight","getNodeFromMouseEvent","getRelativeCursor","isCursorInRect","nodeIndex","find","handleMouseHover","cursor","ScatterPlotCanvas","ResponsiveScatterPlotCanvas"],"mappings":";;;;;;;;;;;;;;;;;AAAe,SAAS,6BAA6B,CAAC,MAAM,EAAE,QAAQ,EAAE;AACxE,EAAE,IAAI,MAAM,IAAI,IAAI,EAAE,OAAO,EAAE,CAAC;AAChC,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC;AAClB,EAAE,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACvC,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;AAEb,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,IAAI,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AACxB,IAAI,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,SAAS;AAC7C,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAC9B,GAAG;AAEH,EAAE,OAAO,MAAM,CAAC;AAChB;;ACZe,SAAS,wBAAwB,CAAC,MAAM,EAAE,QAAQ,EAAE;AACnE,EAAE,IAAI,MAAM,IAAI,IAAI,EAAE,OAAO,EAAE,CAAC;AAChC,EAAE,IAAI,MAAM,GAAGA,6BAA4B,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AAC9D,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;AAEb,EAAE,IAAI,MAAM,CAAC,qBAAqB,EAAE;AACpC,IAAI,IAAI,gBAAgB,GAAG,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;AAEhE,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAClD,MAAM,GAAG,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAChC,MAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,SAAS;AAC/C,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,SAAS;AAC7E,MAAM,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAChC,KAAK;AACL,GAAG;AAEH,EAAE,OAAO,MAAM,CAAC;AAChB;;AClBe,SAAS,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;AACzD,EAAE,IAAI,GAAG,IAAI,GAAG,EAAE;AAClB,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE;AACpC,MAAM,KAAK,EAAE,KAAK;AAClB,MAAM,UAAU,EAAE,IAAI;AACtB,MAAM,YAAY,EAAE,IAAI;AACxB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK,CAAC,CAAC;AACP,GAAG,MAAM;AACT,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACrB,GAAG;AAEH,EAAE,OAAO,GAAG,CAAC;AACb;;ACXA,SAAS,OAAO,CAAC,MAAM,EAAE,cAAc,EAAE;AACzC,EAAE,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAEjC,EAAE,IAAI,MAAM,CAAC,qBAAqB,EAAE;AACpC,IAAI,IAAI,OAAO,GAAG,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;AACvD,IAAI,IAAI,cAAc,EAAE,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE;AAChE,MAAM,OAAO,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC;AACrE,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACnC,GAAG;AAEH,EAAE,OAAO,IAAI,CAAC;AACd,CAAC;AAEc,SAAS,cAAc,CAAC,MAAM,EAAE;AAC/C,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,IAAI,IAAI,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AAE1D,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;AACf,MAAM,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;AAC3D,QAAQC,eAAc,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AACjD,OAAO,CAAC,CAAC;AACT,KAAK,MAAM,IAAI,MAAM,CAAC,yBAAyB,EAAE;AACjD,MAAM,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,CAAC;AAChF,KAAK,MAAM;AACX,MAAM,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;AACrD,QAAQ,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;AACzF,OAAO,CAAC,CAAC;AACT,KAAK;AACL,GAAG;AAEH,EAAE,OAAO,MAAM,CAAC;AAChB;;ACrBA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CACtBC,IADsB;AAAA,SAEmBC,aAAa,CAACD,IAAD,CAFhC;AAAA,CAA1B;;AAIO,IAAME,oBAAoB,GAAG,SAAvBA,oBAAuB,CAChCF,IADgC,EAE/B;AACD,MAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC,OAAOA,IAAP;AAChC,MAAIG,QAAQ,CAACH,IAAD,CAAZ,EAAoB,OAAO;AAAA,WAAMA,IAAN;AAAA,GAAP;;AACpB,MAAID,iBAAiB,CAAWC,IAAX,CAArB,EAAuC;AACnC,QAAI,CAACI,QAAQ,CAACJ,IAAI,CAACK,GAAN,CAAb,EAAyB;AACrB,YAAM,IAAIC,KAAJ,CACF,sGADE,CAAN;AAGH;;AACD,QAAI,CAACC,KAAK,CAACC,OAAN,CAAcR,IAAI,CAACS,MAAnB,CAAD,IAA+BT,IAAI,CAACS,MAAL,CAAYC,MAAZ,KAAuB,CAA1D,EAA6D;AACzD,YAAM,IAAIJ,KAAJ,CACF,0FADE,CAAN;AAGH;;AACD,QAAI,CAACC,KAAK,CAACC,OAAN,CAAcR,IAAI,CAACW,KAAnB,CAAD,IAA8BX,IAAI,CAACW,KAAL,CAAWD,MAAX,KAAsB,CAAxD,EAA2D;AACvD,YAAM,IAAIJ,KAAJ,CACF,yFADE,CAAN;AAGH;;AAED,QAAMM,SAAS,GAAGC,WAAW,GACxBC,MADa,CACN,CAACd,IAAI,CAACS,MAAL,CAAY,CAAZ,CAAD,EAAiBT,IAAI,CAACS,MAAL,CAAY,CAAZ,CAAjB,CADM,EAEbM,KAFa,CAEP,CAACf,IAAI,CAACW,KAAL,CAAW,CAAX,CAAD,EAAgBX,IAAI,CAACW,KAAL,CAAW,CAAX,CAAhB,CAFO,CAAlB;AAIA,WAAO,UAACK,KAAD;AAAA,aACHJ,SAAS,CAACK,GAAG,CAACD,KAAD,EAAQhB,IAAI,CAACK,GAAb,CAAJ,CADN;AAAA,KAAP;AAEH;;AAED,QAAM,IAAIC,KAAJ,CAAU,4EAAV,CAAN;AACH,CA/BM;AAiCA,IAAMY,aAAa,GAAG,SAAhBA,aAAgB,OAUkC;AAAA,MAT3DC,MAS2D,QAT3DA,MAS2D;AAAA,MAR3DC,OAQ2D,QAR3DA,OAQ2D;AAAA,MAP3DC,OAO2D,QAP3DA,OAO2D;AAAA,MAN3DC,SAM2D,QAN3DA,SAM2D;AAC3D,MAAMC,MAA+D,GAAG,EAAxE;AAEAJ,EAAAA,MAAM,CAACK,OAAP,CAAe,UAAAC,KAAK,EAAI;AACpBA,IAAAA,KAAK,CAACC,IAAN,CAAWF,OAAX,CAAmB,UAACG,CAAD,EAAIC,UAAJ,EAAmB;AAClC,UAAMC,KAAmE,GAAG;AACxEC,QAAAA,KAAK,EAAEP,MAAM,CAACb,MAD0D;AAExEkB,QAAAA,UAAU,EAAVA,UAFwE;AAGxEG,QAAAA,OAAO,EAAEN,KAAK,CAACO,EAHyD;AAIxEC,QAAAA,CAAC,EAAEN,CAAC,CAACO,QAAF,CAAWD,CAJ0D;AAKxEE,QAAAA,MAAM,EAAER,CAAC,CAACD,IAAF,CAAOO,CALyD;AAMxEG,QAAAA,UAAU,EAAEhB,OAAO,CAACO,CAAC,CAACD,IAAF,CAAOO,CAAR,CANqD;AAOxEI,QAAAA,CAAC,EAAEV,CAAC,CAACO,QAAF,CAAWG,CAP0D;AAQxEC,QAAAA,MAAM,EAAEX,CAAC,CAACD,IAAF,CAAOW,CARyD;AASxEE,QAAAA,UAAU,EAAElB,OAAO,CAACM,CAAC,CAACD,IAAF,CAAOW,CAAR,CATqD;AAUxEX,QAAAA,IAAI,EAAEC,CAAC,CAACD;AAVgE,OAA5E;AAaAH,MAAAA,MAAM,CAACiB,IAAP,mCACOX,KADP;AAEIG,QAAAA,EAAE,EAAEV,SAAS,CAACO,KAAD;AAFjB;AAIH,KAlBD;AAmBH,GApBD;AAsBA,SAAON,MAAP;AACH,CApCM;;ACrCP,IAAMkB,WAAW,GAAG,SAAdA,WAAc,CAChBzC,IADgB;AAAA,SAEf0C,OAAO,CAAC;AAAA,WAAMxC,oBAAoB,CAAWF,IAAX,CAA1B;AAAA,GAAD,EAA6C,CAACA,IAAD,CAA7C,CAFQ;AAAA,CAApB;;IAIa2C,cAAc,GAAG,SAAjBA,cAAiB,OAsBxB;AAAA,MArBFjB,IAqBE,QArBFA,IAqBE;AAAA,MApBFkB,UAoBE,QApBFA,UAoBE;AAAA,MAnBFC,OAmBE,QAnBFA,OAmBE;AAAA,MAlBFC,UAkBE,QAlBFA,UAkBE;AAAA,MAjBFC,OAiBE,QAjBFA,OAiBE;AAAA,MAhBFC,KAgBE,QAhBFA,KAgBE;AAAA,MAfFC,MAeE,QAfFA,MAeE;AAAA,MAdFC,MAcE,QAdFA,MAcE;AAAA,MAbFC,QAaE,QAbFA,QAaE;AAAA,MAZFC,MAYE,QAZFA,MAYE;;AAAA,iBACiCV,OAAO,CACtC;AAAA,WACIW,wBAAwB,CACpB3B,IADoB,EAEpBkB,UAFoB,EAGpBE,UAHoB,EAIpBE,KAJoB,EAKpBC,MALoB,CAD5B;AAAA,GADsC,EAStC,CAACvB,IAAD,EAAOkB,UAAP,EAAmBE,UAAnB,EAA+BE,KAA/B,EAAsCC,MAAtC,CATsC,CADxC;AAAA,MACM9B,MADN,YACMA,MADN;AAAA,MACcmC,MADd,YACcA,MADd;AAAA,MACsBC,MADtB,YACsBA,MADtB;;AAaF,MAAMnC,OAAO,GAAGoC,iBAAiB,CAACX,OAAD,CAAjC;AACA,MAAMxB,OAAO,GAAGmC,iBAAiB,CAACT,OAAD,CAAjC;AACA,MAAMzB,SAAS,GAAGmC,mBAAmB,CAACP,MAAD,CAArC;AACA,MAAMQ,QAAQ,GAAGhB,OAAO,CACpB;AAAA,WAAMxB,aAAa,CAAW;AAAEC,MAAAA,MAAM,EAANA,MAAF;AAAUC,MAAAA,OAAO,EAAPA,OAAV;AAAmBC,MAAAA,OAAO,EAAPA,OAAnB;AAA4BC,MAAAA,SAAS,EAATA;AAA5B,KAAX,CAAnB;AAAA,GADoB,EAEpB,CAACH,MAAD,EAASC,OAAT,EAAkBC,OAAlB,EAA2BC,SAA3B,CAFoB,CAAxB;AAKA,MAAMqC,WAAW,GAAGlB,WAAW,CAAWU,QAAX,CAA/B;AAEA,MAAMS,QAAQ,GAAGC,oBAAoB,CAACT,MAAD,EAAS,SAAT,CAArC;AAEA,MAAMU,KAAsC,GAAGpB,OAAO,CAClD;AAAA,WACIgB,QAAQ,CAACK,GAAT,CAAa,UAAAC,OAAO;AAAA,+CACbA,OADa;AAEhBhE,QAAAA,IAAI,EAAE2D,WAAW,CAACK,OAAD,CAFD;AAGhBC,QAAAA,KAAK,EAAEL,QAAQ,CAAC;AAAE7B,UAAAA,OAAO,EAAEiC,OAAO,CAACjC;AAAnB,SAAD;AAHC;AAAA,KAApB,CADJ;AAAA,GADkD,EAOlD,CAAC2B,QAAD,EAAWC,WAAX,EAAwBC,QAAxB,CAPkD,CAAtD;AAUA,MAAMM,UAAU,GAAGxB,OAAO,CACtB;AAAA,WACIvB,MAAM,CAAC4C,GAAP,CAAW,UAAAtC,KAAK;AAAA,aAAK;AACjBO,QAAAA,EAAE,EAAEP,KAAK,CAACO,EADO;AAEjBmC,QAAAA,KAAK,EAAE1C,KAAK,CAACO,EAFI;AAGjBiC,QAAAA,KAAK,EAAEL,QAAQ,CAAC;AAAE7B,UAAAA,OAAO,EAAEN,KAAK,CAACO;AAAjB,SAAD;AAHE,OAAL;AAAA,KAAhB,CADJ;AAAA,GADsB,EAOtB,CAACb,MAAD,EAASyC,QAAT,CAPsB,CAA1B;AAUA,SAAO;AACHN,IAAAA,MAAM,EAANA,MADG;AAEHC,IAAAA,MAAM,EAANA,MAFG;AAGHO,IAAAA,KAAK,EAALA,KAHG;AAIHI,IAAAA,UAAU,EAAVA;AAJG,GAAP;AAMH;IAEYE,yBAAyB,GAAG,SAA5BA,yBAA4B,CACrCC,KADqC,EAErCC,WAFqC;AAAA,SAIrCC,cAAc,CAAgC;AAC1C7C,IAAAA,IAAI,EAAE2C,KADoC;AAE1CC,IAAAA,WAAW,EAAXA,WAF0C;AAG1CE,IAAAA,WAAW,EAAE,qBAACC,IAAD;AAAA,aAA0C;AACnDxC,QAAAA,CAAC,EAAEwC,IAAI,CAACxC,CAD2C;AAEnDI,QAAAA,CAAC,EAAEoC,IAAI,CAACpC;AAF2C,OAA1C;AAAA,KAH6B;AAO1CqC,IAAAA,aAAa,EAAE,uBAACD,IAAD;AAAA,aAA0C;AACrDzE,QAAAA,IAAI,EAAEyE,IAAI,CAACzE,IAD0C;AAErDgD,QAAAA,KAAK,EAAEyB,IAAI,CAACzE,IAFyC;AAGrDiD,QAAAA,MAAM,EAAEwB,IAAI,CAACzE;AAHwC,OAA1C;AAAA;AAP2B,GAAhC,CAJuB;AAAA;;ACxFzC,IAAM2E,iBAAiB,GAAG,SAApBA,iBAAoB,CAAC3E,IAAD;AAAA,SAAkBA,IAAI,GAAG,CAAzB;AAAA,CAA1B;;AAEO,IAAM4E,IAAI,GAAG,SAAPA,IAAO,OASkB;AAAA,MARlCH,IAQkC,QARlCA,IAQkC;AAAA,MAPlCI,KAOkC,QAPlCA,KAOkC;AAAA,MANlCC,SAMkC,QANlCA,SAMkC;AAAA,MALlCC,aAKkC,QALlCA,aAKkC;AAAA,MAJlCC,YAIkC,QAJlCA,YAIkC;AAAA,MAHlCC,WAGkC,QAHlCA,WAGkC;AAAA,MAFlCC,YAEkC,QAFlCA,YAEkC;AAAA,MADlCC,OACkC,QADlCA,OACkC;AAClC,MAAMC,gBAAgB,GAAGC,WAAW,CAAC,UAAAC,KAAK;AAAA,WAAIN,YAAJ,aAAIA,YAAJ,uBAAIA,YAAY,CAAGP,IAAH,EAASa,KAAT,CAAhB;AAAA,GAAN,EAAuC,CAACb,IAAD,EAAOO,YAAP,CAAvC,CAApC;AACA,MAAMO,eAAe,GAAGF,WAAW,CAAC,UAAAC,KAAK;AAAA,WAAIL,WAAJ,aAAIA,WAAJ,uBAAIA,WAAW,CAAGR,IAAH,EAASa,KAAT,CAAf;AAAA,GAAN,EAAsC,CAACb,IAAD,EAAOQ,WAAP,CAAtC,CAAnC;AACA,MAAMO,gBAAgB,GAAGH,WAAW,CAAC,UAAAC,KAAK;AAAA,WAAIJ,YAAJ,aAAIA,YAAJ,uBAAIA,YAAY,CAAGT,IAAH,EAASa,KAAT,CAAhB;AAAA,GAAN,EAAuC,CAACb,IAAD,EAAOS,YAAP,CAAvC,CAApC;AACA,MAAMO,WAAW,GAAGJ,WAAW,CAAC,UAAAC,KAAK;AAAA,WAAIH,OAAJ,aAAIA,OAAJ,uBAAIA,OAAO,CAAGV,IAAH,EAASa,KAAT,CAAX;AAAA,GAAN,EAAkC,CAACb,IAAD,EAAOU,OAAP,CAAlC,CAA/B;AAEA,SACIO,IAAC,QAAD,CAAU,MAAV;AACI,IAAA,EAAE,EAAEb,KAAK,CAAC5C,CADd;AAEI,IAAA,EAAE,EAAE4C,KAAK,CAACxC,CAFd;AAGI,IAAA,CAAC,EAAEwC,KAAK,CAAC7E,IAAN,CAAW2F,EAAX,CAAchB,iBAAd,CAHP;AAII,IAAA,IAAI,EAAEE,KAAK,CAACZ,KAJhB;AAKI,IAAA,KAAK,EAAE;AAAE2B,MAAAA,YAAY,EAAEd;AAAhB,KALX;AAMI,IAAA,YAAY,EAAEC,aAAa,GAAGK,gBAAH,GAAsBS,SANrD;AAOI,IAAA,WAAW,EAAEd,aAAa,GAAGQ,eAAH,GAAqBM,SAPnD;AAQI,IAAA,YAAY,EAAEd,aAAa,GAAGS,gBAAH,GAAsBK,SARrD;AASI,IAAA,OAAO,EAAEd,aAAa,GAAGU,WAAH,GAAiBI;AAT3C,IADJ;AAaH,CA5BM;;ACHA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,MACnBrB,IADmB,QACnBA,IADmB;AAAA,SAGnBiB,IAAC,YAAD;AACI,IAAA,EAAE,EAAEjB,IAAI,CAAC1C,OADb;AAEI,IAAA,KAAK,eAAQ0C,IAAI,CAACrC,UAAb,kBAA+BqC,IAAI,CAAClC,UAApC,CAFT;AAGI,IAAA,UAAU,EAAE,IAHhB;AAII,IAAA,KAAK,EAAEkC,IAAI,CAACR;AAJhB,IAHmB;AAAA,CAAhB;;ICOM8B,kBAAkB,GAAG;AAC9BzC,EAAAA,MAAM,EAAE;AACJ0C,IAAAA,IAAI,EAAE,QADF;AAEJC,IAAAA,GAAG,EAAE,CAFD;AAGJC,IAAAA,GAAG,EAAE;AAHD,GADsB;AAM9B3C,EAAAA,MAAM,EAAE;AACJyC,IAAAA,IAAI,EAAE,QADF;AAEJC,IAAAA,GAAG,EAAE,CAFD;AAGJC,IAAAA,GAAG,EAAE;AAHD,GANsB;AAY9BC,EAAAA,WAAW,EAAE,IAZiB;AAa9BC,EAAAA,WAAW,EAAE,IAbiB;AAc9BC,EAAAA,UAAU,EAAE,EAdkB;AAe9BC,EAAAA,QAAQ,EAAE,EAfoB;AAiB9BpD,EAAAA,MAAM,EAAG;AAAA,QAAGnB,OAAH,QAAGA,OAAH;AAAA,QAAYD,KAAZ,QAAYA,KAAZ;AAAA,qBAA2BC,OAA3B,cAAsCD,KAAtC;AAAA,GAjBqB;AAoB9BqB,EAAAA,QAAQ,EAAE,CApBoB;AAqB9BoD,EAAAA,aAAa,EAAE3B,IArBe;AAuB9BxB,EAAAA,MAAM,EAAE;AAAEoD,IAAAA,MAAM,EAAE;AAAV,GAvBsB;AAyB9BzB,EAAAA,aAAa,EAAE,IAzBe;AA0B9B0B,EAAAA,SAAS,EAAE,KA1BmB;AA4B9BC,EAAAA,OAAO,EAAEZ,OA5BqB;AA8B9Ba,EAAAA,OAAO,EAAE,EA9BqB;AAgC9BC,EAAAA,OAAO,EAAE,EAhCqB;AAkC9BtC,EAAAA,WAAW,EAAE;AAlCiB;IAqCrBuC,eAAe,qCACrBd,kBADqB;AAExBjB,EAAAA,SAAS,EAAE,QAFa;AAGxBgC,EAAAA,MAAM,EAAE,CACJ,MADI,EAEJ,MAFI,EAGJ,OAHI,EAIJ,SAJI,EAKJ,MALI,EAMJ,SANI,EAOJ,aAPI,CAHgB;AAYxBC,EAAAA,IAAI,EAAE,KAZkB;AAaxBC,EAAAA,OAAO,EAAE,IAbe;AAcxBC,EAAAA,OAAO,EAAE,IAde;AAexBC,EAAAA,YAAY,EAAE;AAfU;IAkBfC,kBAAkB,qCACxBpB,kBADwB;AAE3Be,EAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0B,MAA1B,EAAkC,SAAlC,EAA6C,aAA7C,CAFmB;AAG3BM,EAAAA,UAAU,EAAE,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAM,CAACC,gBAAP,IAA2B,CAA3D,GAA+D,CAHhD;AAI3BC,EAAAA,UAAU,EAAE,oBAACC,GAAD,EAAgC/C,IAAhC,EAAgF;AACxF+C,IAAAA,GAAG,CAACC,SAAJ;AACAD,IAAAA,GAAG,CAACE,GAAJ,CAAQjD,IAAI,CAACxC,CAAb,EAAgBwC,IAAI,CAACpC,CAArB,EAAwBoC,IAAI,CAACzE,IAAL,GAAY,CAApC,EAAuC,CAAvC,EAA0C,IAAI2H,IAAI,CAACC,EAAnD;AACAJ,IAAAA,GAAG,CAACK,SAAJ,GAAgBpD,IAAI,CAACR,KAArB;AACAuD,IAAAA,GAAG,CAACM,IAAJ;AACH;AAT0B;;ACxDxB,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,OAGO;AAAA,MAFzCjE,KAEyC,QAFzCA,KAEyC;AAAA,MADzCQ,WACyC,QADzCA,WACyC;AACzC,MAAM0D,gBAAgB,GAAG5D,yBAAyB,CAAWN,KAAX,EAAkBQ,WAAlB,CAAlD;AAEA,SACIoB;AAAA,cACKsC,gBAAgB,CAACjE,GAAjB,CAAqB,UAACkE,UAAD,EAAaC,CAAb;AAAA,aAClBxC,IAAC,UAAD,qBAAwBuC,UAAxB,GAAiBC,CAAjB,CADkB;AAAA,KAArB;AADL,IADJ;AAOH,CAbM;;ACcP,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAoC1D,IAApC;AAAA,SACfA,IAAI,CAACzC,EADU;AAAA,CAAnB;;AAEA,IAAMoG,iBAAiB,GAAG,SAApBA,iBAAoB,CACtB3D,IADsB;AAAA,SAEpB;AACFxC,IAAAA,CAAC,EAAEwC,IAAI,CAACxC,CADN;AAEFI,IAAAA,CAAC,EAAEoC,IAAI,CAACpC,CAFN;AAGFrC,IAAAA,IAAI,EAAEyE,IAAI,CAACzE,IAHT;AAIFiE,IAAAA,KAAK,EAAEQ,IAAI,CAACR;AAJV,GAFoB;AAAA,CAA1B;;AAQA,IAAMoE,eAAe,GAAG,SAAlBA,eAAkB,CACpB5D,IADoB;AAAA,SAElB;AACFxC,IAAAA,CAAC,EAAEwC,IAAI,CAACxC,CADN;AAEFI,IAAAA,CAAC,EAAEoC,IAAI,CAACpC,CAFN;AAGFrC,IAAAA,IAAI,EAAE,CAHJ;AAIFiE,IAAAA,KAAK,EAAEQ,IAAI,CAACR;AAJV,GAFkB;AAAA,CAAxB;;AASO,IAAMqE,KAAK,GAAG,SAARA,KAAQ,OAUO;AAAA,MATxBxE,KASwB,QATxBA,KASwB;AAAA,MARxByC,aAQwB,QARxBA,aAQwB;AAAA,MAPxBxB,aAOwB,QAPxBA,aAOwB;AAAA,MANxBC,YAMwB,QANxBA,YAMwB;AAAA,MALxBC,WAKwB,QALxBA,WAKwB;AAAA,MAJxBC,YAIwB,QAJxBA,YAIwB;AAAA,MAHxBC,OAGwB,QAHxBA,OAGwB;AAAA,MAFxBuB,OAEwB,QAFxBA,OAEwB;AAAA,MADxB5B,SACwB,QADxBA,SACwB;;AAAA,yBACkByD,eAAe,EADjC;AAAA,MAChBtB,OADgB,oBAChBA,OADgB;AAAA,MACCuB,YADD,oBACPC,MADO;;AAExB,MAAMC,UAAU,GAAGC,aAAa,CAQ9B7E,KAR8B,EAQvB;AACL8E,IAAAA,IAAI,EAAET,UADD;AAELU,IAAAA,IAAI,EAAET,iBAFD;AAGLU,IAAAA,KAAK,EAAEV,iBAHF;AAILW,IAAAA,MAAM,EAAEX,iBAJH;AAKLY,IAAAA,KAAK,EAAEX,eALF;AAMLI,IAAAA,MAAM,EAAED,YANH;AAOLS,IAAAA,SAAS,EAAE,CAAChC;AAPP,GARuB,CAAhC;;AAFwB,oBAoBsBiC,UAAU,EApBhC;AAAA,MAoBhBC,oBApBgB,eAoBhBA,oBApBgB;AAAA,MAoBMC,WApBN,eAoBMA,WApBN;;AAqBxB,MAAMhE,gBAAgB,GAAGC,WAAW,CAChC,UAACZ,IAAD,EAAOa,KAAP,EAAiB;AACb6D,IAAAA,oBAAoB,CAACE,aAAa,CAAC3C,OAAD,EAAU;AAAEjC,MAAAA,IAAI,EAAJA;AAAF,KAAV,CAAd,EAAmCa,KAAnC,CAApB;AACAN,IAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAGP,IAAH,EAASa,KAAT,CAAZ;AACH,GAJ+B,EAKhC,CAACoB,OAAD,EAAUyC,oBAAV,EAAgCnE,YAAhC,CALgC,CAApC;AAOA,MAAMO,eAAe,GAAGF,WAAW,CAC/B,UAACZ,IAAD,EAAOa,KAAP,EAAiB;AACb6D,IAAAA,oBAAoB,CAACE,aAAa,CAAC3C,OAAD,EAAU;AAAEjC,MAAAA,IAAI,EAAJA;AAAF,KAAV,CAAd,EAAmCa,KAAnC,CAApB;AACAL,IAAAA,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAGR,IAAH,EAASa,KAAT,CAAX;AACH,GAJ8B,EAK/B,CAACoB,OAAD,EAAUyC,oBAAV,EAAgClE,WAAhC,CAL+B,CAAnC;AAOA,MAAMO,gBAAgB,GAAGH,WAAW,CAChC,UAACZ,IAAD,EAAOa,KAAP,EAAiB;AACb8D,IAAAA,WAAW;AACXlE,IAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAGT,IAAH,EAASa,KAAT,CAAZ;AACH,GAJ+B,EAKhC,CAAC8D,WAAD,EAAclE,YAAd,CALgC,CAApC;AAOA,MAAMO,WAAW,GAAGJ,WAAW,CAAC,UAACZ,IAAD,EAAOa,KAAP;AAAA,WAAiBH,OAAjB,aAAiBA,OAAjB,uBAAiBA,OAAO,CAAGV,IAAH,EAASa,KAAT,CAAxB;AAAA,GAAD,EAA0C,CAACH,OAAD,CAA1C,CAA/B;AAEA,SACIO;AAAA,cACKgD,UAAU,CAAC,UAAC7D,KAAD,EAAQJ,IAAR;AAAA,aACR4E,aAAa,CAAC9C,aAAD,EAAgB;AACzB9B,QAAAA,IAAI,EAAJA,IADyB;AAEzBI,QAAAA,KAAK,EAALA,KAFyB;AAGzBC,QAAAA,SAAS,EAATA,SAHyB;AAIzBC,QAAAA,aAAa,EAAbA,aAJyB;AAKzBC,QAAAA,YAAY,EAAED,aAAa,GAAGK,gBAAH,GAAsBS,SALxB;AAMzBZ,QAAAA,WAAW,EAAEF,aAAa,GAAGQ,eAAH,GAAqBM,SANtB;AAOzBX,QAAAA,YAAY,EAAEH,aAAa,GAAGS,gBAAH,GAAsBK,SAPxB;AAQzBV,QAAAA,OAAO,EAAEJ,aAAa,GAAGU,WAAH,GAAiBI;AARd,OAAhB,CADL;AAAA,KAAD;AADf,IADJ;AAgBH,CAtEM;;ACzBA,IAAMyD,IAAI,GAAG,SAAPA,IAAO,OAUO;AAAA,MATvBxF,KASuB,QATvBA,KASuB;AAAA,MARvBd,KAQuB,QARvBA,KAQuB;AAAA,MAPvBC,MAOuB,QAPvBA,MAOuB;AAAA,MANvB+B,YAMuB,QANvBA,YAMuB;AAAA,MALvBC,WAKuB,QALvBA,WAKuB;AAAA,MAJvBC,YAIuB,QAJvBA,YAIuB;AAAA,MAHvBC,OAGuB,QAHvBA,OAGuB;AAAA,MAFvBuB,OAEuB,QAFvBA,OAEuB;AAAA,MADvB6C,KACuB,QADvBA,KACuB;;AAAA,oBACuBL,UAAU,EADjC;AAAA,MACfC,oBADe,eACfA,oBADe;AAAA,MACOC,WADP,eACOA,WADP;;AAGvB,MAAMhE,gBAAgB,GAAGC,WAAW,CAChC,UAACZ,IAAD,EAAsCa,KAAtC,EAAgD;AAC5C6D,IAAAA,oBAAoB,CAACE,aAAa,CAAC3C,OAAD,EAAU;AAAEjC,MAAAA,IAAI,EAAJA;AAAF,KAAV,CAAd,EAAmCa,KAAnC,CAApB;AACAN,IAAAA,YAAY,IAAIA,YAAY,CAACP,IAAD,EAAOa,KAAP,CAA5B;AACH,GAJ+B,EAKhC,CAAC6D,oBAAD,EAAuBzC,OAAvB,EAAgC1B,YAAhC,CALgC,CAApC;AAQA,MAAMO,eAAe,GAAGF,WAAW,CAC/B,UAACZ,IAAD,EAAsCa,KAAtC,EAAgD;AAC5C6D,IAAAA,oBAAoB,CAACE,aAAa,CAAC3C,OAAD,EAAU;AAAEjC,MAAAA,IAAI,EAAJA;AAAF,KAAV,CAAd,EAAmCa,KAAnC,CAApB;AACAL,IAAAA,WAAW,IAAIA,WAAW,CAACR,IAAD,EAAOa,KAAP,CAA1B;AACH,GAJ8B,EAK/B,CAAC6D,oBAAD,EAAuBzC,OAAvB,EAAgCzB,WAAhC,CAL+B,CAAnC;AAQA,MAAMO,gBAAgB,GAAGH,WAAW,CAChC,UAACZ,IAAD,EAAsCa,KAAtC,EAAgD;AAC5C8D,IAAAA,WAAW;AACXlE,IAAAA,YAAY,IAAIA,YAAY,CAACT,IAAD,EAAOa,KAAP,CAA5B;AACH,GAJ+B,EAKhC,CAAC8D,WAAD,EAAclE,YAAd,CALgC,CAApC;AAQA,MAAMO,WAAW,GAAGJ,WAAW,CAC3B,UAACZ,IAAD,EAAsCa,KAAtC,EAAgD;AAC5CH,IAAAA,OAAO,IAAIA,OAAO,CAACV,IAAD,EAAOa,KAAP,CAAlB;AACH,GAH0B,EAI3B,CAACH,OAAD,CAJ2B,CAA/B;AAOA,SACIO,IAAC8D,MAAD;AACI,IAAA,KAAK,EAAE1F,KADX;AAEI,IAAA,KAAK,EAAEd,KAFX;AAGI,IAAA,MAAM,EAAEC,MAHZ;AAII,IAAA,YAAY,EAAEmC,gBAJlB;AAKI,IAAA,WAAW,EAAEG,eALjB;AAMI,IAAA,YAAY,EAAEC,gBANlB;AAOI,IAAA,OAAO,EAAEC,WAPb;AAQI,IAAA,KAAK,EAAE8D;AARX,IADJ;AAYH,CAxDM;;ACDP,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,OAsCc;AAAA,MArCnC/H,IAqCmC,QArCnCA,IAqCmC;AAAA,yBApCnC4B,MAoCmC;AAAA,MApC3BV,UAoC2B,4BApCdiE,eAAe,CAACvD,MAoCF;AAAA,MAnCnCT,OAmCmC,QAnCnCA,OAmCmC;AAAA,yBAlCnCU,MAkCmC;AAAA,MAlC3BT,UAkC2B,4BAlCd+D,eAAe,CAACtD,MAkCF;AAAA,MAjCnCR,OAiCmC,QAjCnCA,OAiCmC;AAAA,MAhCnCC,KAgCmC,QAhCnCA,KAgCmC;AAAA,MA/BnCC,MA+BmC,QA/BnCA,MA+BmC;AAAA,MA9B3ByG,aA8B2B,QA9BnCC,MA8BmC;AAAA,yBA7BnC7C,MA6BmC;AAAA,MA7BnCA,MA6BmC,4BA7B1BD,eAAe,CAACC,MA6BU;AAAA,yBA5BnC1D,MA4BmC;AAAA,MA5BnCA,MA4BmC,4BA5B1ByD,eAAe,CAACzD,MA4BU;AAAA,4BA3BnC0B,SA2BmC;AAAA,MA3BnCA,SA2BmC,+BA3BvB+B,eAAe,CAAC/B,SA2BO;AAAA,yBA1BnC5B,MA0BmC;AAAA,MA1BnCA,MA0BmC,4BA1B1B2D,eAAe,CAAC3D,MA0BU;AAAA,2BAzBnCC,QAyBmC;AAAA,MAzBnCA,QAyBmC,8BAzBxB0D,eAAe,CAAC1D,QAyBQ;AAAA,gCAxBnCoD,aAwBmC;AAAA,MAxBnCA,aAwBmC,mCAxBnBM,eAAe,CAACN,aAwBG;AAAA,8BAvBnCJ,WAuBmC;AAAA,MAvBnCA,WAuBmC,iCAvBrBU,eAAe,CAACV,WAuBK;AAAA,8BAtBnCC,WAsBmC;AAAA,MAtBnCA,WAsBmC,iCAtBrBS,eAAe,CAACT,WAsBK;AAAA,MArBnCwD,WAqBmC,QArBnCA,WAqBmC;AAAA,MApBnCC,WAoBmC,QApBnCA,WAoBmC;AAAA,MAnBnCC,OAmBmC,QAnBnCA,OAmBmC;AAAA,MAlBnCC,SAkBmC,QAlBnCA,SAkBmC;AAAA,6BAjBnC1D,UAiBmC;AAAA,MAjBnCA,UAiBmC,gCAjBtBQ,eAAe,CAACR,UAiBM;AAAA,2BAhBnCC,QAgBmC;AAAA,MAhBnCA,QAgBmC,8BAhBxBO,eAAe,CAACP,QAgBQ;AAAA,8BAfnChC,WAemC;AAAA,MAfnCA,WAemC,iCAfrBuC,eAAe,CAACvC,WAeK;AAAA,gCAdnCS,aAcmC;AAAA,MAdnCA,aAcmC,mCAdnB8B,eAAe,CAAC9B,aAcG;AAAA,0BAbnCiC,OAamC;AAAA,MAbnCA,OAamC,6BAbzBH,eAAe,CAACG,OAaS;AAAA,4BAZnCP,SAYmC;AAAA,MAZnCA,SAYmC,+BAZvBI,eAAe,CAACJ,SAYO;AAAA,MAXnCzB,YAWmC,QAXnCA,YAWmC;AAAA,MAVnCC,WAUmC,QAVnCA,WAUmC;AAAA,MATnCC,YASmC,QATnCA,YASmC;AAAA,MARnCC,OAQmC,QARnCA,OAQmC;AAAA,0BAPnCuB,OAOmC;AAAA,MAPnCA,OAOmC,6BAPzBG,eAAe,CAACH,OAOS;AAAA,0BANnCC,OAMmC;AAAA,MANnCA,OAMmC,6BANzBE,eAAe,CAACF,OAMS;AAAA,0BALnCC,OAKmC;AAAA,MALnCA,OAKmC,6BALzBC,eAAe,CAACD,OAKS;AAAA,uBAJnCG,IAImC;AAAA,MAJnCA,IAImC,0BAJ5BF,eAAe,CAACE,IAIY;AAAA,MAHnCiD,SAGmC,QAHnCA,SAGmC;AAAA,MAFnCC,cAEmC,QAFnCA,cAEmC;AAAA,MADnCC,eACmC,QADnCA,eACmC;;AAAA,uBACkCC,aAAa,CAC9EnH,KAD8E,EAE9EC,MAF8E,EAG9EyG,aAH8E,CAD/C;AAAA,MAC3BC,MAD2B,kBAC3BA,MAD2B;AAAA,MACnBS,UADmB,kBACnBA,UADmB;AAAA,MACPC,WADO,kBACPA,WADO;AAAA,MACMC,UADN,kBACMA,UADN;AAAA,MACkBC,WADlB,kBACkBA,WADlB;;AAAA,wBAOW5H,cAAc,CAAW;AACnEjB,IAAAA,IAAI,EAAJA,IADmE;AAEnEkB,IAAAA,UAAU,EAAVA,UAFmE;AAGnEC,IAAAA,OAAO,EAAPA,OAHmE;AAInEC,IAAAA,UAAU,EAAVA,UAJmE;AAKnEC,IAAAA,OAAO,EAAPA,OALmE;AAMnEC,IAAAA,KAAK,EAAEoH,UAN4D;AAOnEnH,IAAAA,MAAM,EAAEoH,WAP2D;AAQnEnH,IAAAA,MAAM,EAANA,MARmE;AASnEC,IAAAA,QAAQ,EAARA,QATmE;AAUnEC,IAAAA,MAAM,EAANA;AAVmE,GAAX,CAPzB;AAAA,MAO3BE,MAP2B,mBAO3BA,MAP2B;AAAA,MAOnBC,MAPmB,mBAOnBA,MAPmB;AAAA,MAOXO,KAPW,mBAOXA,KAPW;AAAA,MAOJI,UAPI,mBAOJA,UAPI;;AAoBnC,MAAMsG,gBAAgB,GAAG9H,OAAO,CAC5B;AAAA,WAAO;AACHY,MAAAA,MAAM,EAANA,MADG;AAEHC,MAAAA,MAAM,EAANA,MAFG;AAGHO,MAAAA,KAAK,EAALA,KAHG;AAIH6F,MAAAA,MAAM,EAANA,MAJG;AAKHS,MAAAA,UAAU,EAAVA,UALG;AAMHC,MAAAA,WAAW,EAAXA,WANG;AAOHC,MAAAA,UAAU,EAAVA,UAPG;AAQHC,MAAAA,WAAW,EAAXA;AARG,KAAP;AAAA,GAD4B,EAW5B,CAACjH,MAAD,EAASC,MAAT,EAAiBO,KAAjB,EAAwB6F,MAAxB,EAAgCS,UAAhC,EAA4CC,WAA5C,EAAyDC,UAAzD,EAAqEC,WAArE,CAX4B,CAAhC;AAcA,MAAME,SAAgD,GAAG;AACrDC,IAAAA,IAAI,EAAE,IAD+C;AAErDC,IAAAA,IAAI,EAAE,IAF+C;AAGrD7G,IAAAA,KAAK,EAAE,IAH8C;AAIrD6C,IAAAA,OAAO,EAAE,IAJ4C;AAKrDiE,IAAAA,IAAI,EAAE,IAL+C;AAMrDtG,IAAAA,WAAW,EAAE,IANwC;AAOrDsC,IAAAA,OAAO,EAAE;AAP4C,GAAzD;;AAUA,MAAIE,MAAM,CAAC+D,QAAP,CAAgB,MAAhB,CAAJ,EAA6B;AACzBJ,IAAAA,SAAS,CAACC,IAAV,GACIhF,IAAC,IAAD;AAEI,MAAA,KAAK,EAAE0E,UAFX;AAGI,MAAA,MAAM,EAAEC,WAHZ;AAII,MAAA,MAAM,EAAElE,WAAW,GAAI7C,MAAJ,GAAqB,IAJ5C;AAKI,MAAA,MAAM,EAAE8C,WAAW,GAAI7C,MAAJ,GAAqB,IAL5C;AAMI,MAAA,OAAO,EAAEqG,WANb;AAOI,MAAA,OAAO,EAAEC;AAPb,OACQ,MADR,CADJ;AAWH;;AAED,MAAI/C,MAAM,CAAC+D,QAAP,CAAgB,MAAhB,CAAJ,EAA6B;AACzBJ,IAAAA,SAAS,CAACE,IAAV,GACIjF,IAAC,IAAD;AAEI,MAAA,MAAM,EAAEpC,MAFZ;AAGI,MAAA,MAAM,EAAEC,MAHZ;AAII,MAAA,KAAK,EAAE6G,UAJX;AAKI,MAAA,MAAM,EAAEC,WALZ;AAMI,MAAA,GAAG,EAAEP,OANT;AAOI,MAAA,KAAK,EAAEC,SAPX;AAQI,MAAA,MAAM,EAAE1D,UARZ;AASI,MAAA,IAAI,EAAEC;AATV,OACQ,MADR,CADJ;AAaH;;AAED,MAAIQ,MAAM,CAAC+D,QAAP,CAAgB,OAAhB,CAAJ,EAA8B;AAC1BJ,IAAAA,SAAS,CAAC3G,KAAV,GACI4B,IAAC,KAAD;AAEI,MAAA,KAAK,EAAE5B,KAFX;AAGI,MAAA,aAAa,EAAEyC,aAHnB;AAII,MAAA,aAAa,EAAExB,aAJnB;AAKI,MAAA,OAAO,EAAE2B,OALb;AAMI,MAAA,SAAS,EAAE5B,SANf;AAOI,MAAA,YAAY,EAAEE,YAPlB;AAQI,MAAA,WAAW,EAAEC,WARjB;AASI,MAAA,YAAY,EAAEC,YATlB;AAUI,MAAA,OAAO,EAAEC;AAVb,OACQ,OADR,CADJ;AAcH;;AAED,MAAI2B,MAAM,CAAC+D,QAAP,CAAgB,SAAhB,CAAJ,EAAgC;AAC5BJ,IAAAA,SAAS,CAAC9D,OAAV,GACIjB,IAAC,gBAAD;AAEI,MAAA,OAAO,EAAEiB,OAFb;AAGI,MAAA,KAAK,EAAEyD,UAHX;AAII,MAAA,MAAM,EAAEC,WAJZ;AAKI,MAAA,MAAM,EAAE/G,MALZ;AAMI,MAAA,MAAM,EAAEC;AANZ,OACQ,SADR,CADJ;AAUH;;AAED,MAAIuD,MAAM,CAAC+D,QAAP,CAAgB,MAAhB,KAA2B9F,aAA3B,IAA4CiC,OAAhD,EAAyD;AACrDyD,IAAAA,SAAS,CAACG,IAAV,GACIlF,IAAC,IAAD;AAEI,MAAA,KAAK,EAAE5B,KAFX;AAGI,MAAA,KAAK,EAAEsG,UAHX;AAII,MAAA,MAAM,EAAEC,WAJZ;AAKI,MAAA,YAAY,EAAErF,YALlB;AAMI,MAAA,WAAW,EAAEC,WANjB;AAOI,MAAA,YAAY,EAAEC,YAPlB;AAQI,MAAA,OAAO,EAAEC,OARb;AASI,MAAA,OAAO,EAAEuB,OATb;AAUI,MAAA,KAAK,EAAED;AAVX,OACQ,MADR,CADJ;AAcH;;AAED,MAAIK,MAAM,CAAC+D,QAAP,CAAgB,aAAhB,CAAJ,EAAoC;AAChCJ,IAAAA,SAAS,CAACnG,WAAV,GACIoB,IAAC,sBAAD;AAEI,MAAA,KAAK,EAAE5B,KAFX;AAGI,MAAA,WAAW,EAAEQ;AAHjB,OACQ,aADR,CADJ;AAOH;;AAED,MAAIwC,MAAM,CAAC+D,QAAP,CAAgB,SAAhB,CAAJ,EAAgC;AAC5BJ,IAAAA,SAAS,CAAC7D,OAAV,GAAoBA,OAAO,CAAC7C,GAAR,CAAY,UAAC+G,MAAD,EAAS5C,CAAT;AAAA,aAC5BxC,IAAC,YAAD,oCAEQoF,MAFR;AAGI,QAAA,cAAc,EAAEV,UAHpB;AAII,QAAA,eAAe,EAAEC,WAJrB;AAKI,QAAA,IAAI,EAAEnG;AALV,UACSgE,CADT,CAD4B;AAAA,KAAZ,CAApB;AASH;;AAED,SACIxC,IAAC,UAAD;AACI,IAAA,KAAK,EAAE4E,UADX;AAEI,IAAA,MAAM,EAAEC,WAFZ;AAGI,IAAA,MAAM,EAAEZ,MAHZ;AAII,IAAA,IAAI,EAAE5C,IAJV;AAKI,IAAA,SAAS,EAAEiD,SALf;AAMI,IAAA,cAAc,EAAEC,cANpB;AAOI,IAAA,eAAe,EAAEC,eAPrB;AAAA,cASKpD,MAAM,CAAC/C,GAAP,CAAW,UAACgH,KAAD,EAAQ7C,CAAR,EAAc;AACtB,UAAI,OAAO6C,KAAP,KAAiB,QAAjB,IAA6BN,SAAS,CAACM,KAAD,CAAT,KAAqBlF,SAAtD,EAAiE;AAC7D,eAAO4E,SAAS,CAACM,KAAD,CAAhB;AACH;;AAED,UAAI,OAAOA,KAAP,KAAiB,UAArB,EAAiC;AAC7B,eAAOrF,IAACsF,UAAD;AAAA,oBAAmB3B,aAAa,CAAC0B,KAAD,EAAQP,gBAAR;AAAhC,WAAetC,CAAf,CAAP;AACH;;AAED,YAAM,IAAI5H,KAAJ,0BAA4ByK,KAA5B,OAAN;AACH,KAVA;AATL,IADJ;AAuBH,CA5MD;;IA8MaE,WAAW,GAAG,SAAdA,WAAc;AAAA,kCACvBlG,aADuB;AAAA,MACvBA,aADuB,oCACP8B,eAAe,CAAC9B,aADT;AAAA,4BAEvBkC,OAFuB;AAAA,MAEvBA,OAFuB,8BAEbJ,eAAe,CAACI,OAFH;AAAA,iCAGvBC,YAHuB;AAAA,MAGvBA,YAHuB,mCAGRL,eAAe,CAACK,YAHR;AAAA,MAIvBgE,KAJuB,SAIvBA,KAJuB;AAAA,MAKvBC,aALuB,SAKvBA,aALuB;AAAA,MAMpBC,UANoB;;AAAA,SAQvB1F,IAAC,SAAD;AAEQuB,IAAAA,OAAO,EAAPA,OAFR;AAGQlC,IAAAA,aAAa,EAAbA,aAHR;AAIQmC,IAAAA,YAAY,EAAZA,YAJR;AAKQiE,IAAAA,aAAa,EAAbA,aALR;AAMQD,IAAAA,KAAK,EAALA,KANR;AAAA,cASIxF,IAAC,gBAAD;AAA4B,MAAA,aAAa,EAAEX;AAA3C,OAA8DqG,UAA9D;AATJ,IARuB;AAAA;;IC1NdC,qBAAqB,GAAG,SAAxBA,qBAAwB,CACjCC,KADiC;AAAA,SAGjC5F,IAAC,iBAAD;AAAA,cACK;AAAA,UAAG1C,KAAH,QAAGA,KAAH;AAAA,UAAUC,MAAV,QAAUA,MAAV;AAAA,aAAuByC,IAAC,WAAD;AAAuB,QAAA,KAAK,EAAE1C,KAA9B;AAAqC,QAAA,MAAM,EAAEC;AAA7C,SAAyDqI,KAAzD,EAAvB;AAAA;AADL,IAHiC;AAAA;;ACJtB,SAAS,eAAe,CAAC,GAAG,EAAE;AAC7C,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC;AACrC;;ACFe,SAAS,qBAAqB,CAAC,GAAG,EAAE,CAAC,EAAE;AACtD,EAAE,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,EAAE,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO;AACjF,EAAE,IAAI,IAAI,GAAG,EAAE,CAAC;AAChB,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;AAChB,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;AACjB,EAAE,IAAI,EAAE,GAAG,SAAS,CAAC;AAErB,EAAE,IAAI;AACN,IAAI,KAAK,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,EAAE;AACxF,MAAM,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;AAE1B,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,MAAM;AACxC,KAAK;AACL,GAAG,CAAC,OAAO,GAAG,EAAE;AAChB,IAAI,EAAE,GAAG,IAAI,CAAC;AACd,IAAI,EAAE,GAAG,GAAG,CAAC;AACb,GAAG,SAAS;AACZ,IAAI,IAAI;AACR,MAAM,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC;AACtD,KAAK,SAAS;AACd,MAAM,IAAI,EAAE,EAAE,MAAM,EAAE,CAAC;AACvB,KAAK;AACL,GAAG;AAEH,EAAE,OAAO,IAAI,CAAC;AACd;;ACzBe,SAAS,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE;AACpD,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;AAExD,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AACvD,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AACrB,GAAG;AAEH,EAAE,OAAO,IAAI,CAAC;AACd;;ACPe,SAAS,2BAA2B,CAAC,CAAC,EAAE,MAAM,EAAE;AAC/D,EAAE,IAAI,CAAC,CAAC,EAAE,OAAO;AACjB,EAAE,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,OAAOC,iBAAgB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AAChE,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACzD,EAAE,IAAI,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC;AAC9D,EAAE,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvD,EAAE,IAAI,CAAC,KAAK,WAAW,IAAI,0CAA0C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAOA,iBAAgB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AAClH;;ACRe,SAAS,gBAAgB,GAAG;AAC3C,EAAE,MAAM,IAAI,SAAS,CAAC,2IAA2I,CAAC,CAAC;AACnK;;ACEe,SAAS,cAAc,CAAC,GAAG,EAAE,CAAC,EAAE;AAC/C,EAAE,OAAOC,eAAc,CAAC,GAAG,CAAC,IAAIC,qBAAoB,CAAC,GAAG,EAAE,CAAC,CAAC,IAAIC,2BAA0B,CAAC,GAAG,EAAE,CAAC,CAAC,IAAIC,gBAAe,EAAE,CAAC;AACxH;;ACUA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,OAgCc;AAAA,MA/BzClK,IA+ByC,QA/BzCA,IA+ByC;AAAA,yBA9BzC4B,MA8ByC;AAAA,MA9BjCV,UA8BiC,4BA9BpBuE,kBAAkB,CAAC7D,MA8BC;AAAA,MA7BzCT,OA6ByC,QA7BzCA,OA6ByC;AAAA,yBA5BzCU,MA4ByC;AAAA,MA5BjCT,UA4BiC,4BA5BpBqE,kBAAkB,CAAC5D,MA4BC;AAAA,MA3BzCR,OA2ByC,QA3BzCA,OA2ByC;AAAA,MA1BzCC,KA0ByC,QA1BzCA,KA0ByC;AAAA,MAzBzCC,MAyByC,QAzBzCA,MAyByC;AAAA,MAxBjCyG,aAwBiC,QAxBzCC,MAwByC;AAAA,6BAvBzCvC,UAuByC;AAAA,MAvBzCA,UAuByC,gCAvB5BD,kBAAkB,CAACC,UAuBS;AAAA,yBAtBzCN,MAsByC;AAAA,MAtBzCA,MAsByC,4BAtBhCK,kBAAkB,CAACL,MAsBa;AAAA,yBArBzC1D,MAqByC;AAAA,MArBzCA,MAqByC,4BArBhC+D,kBAAkB,CAAC/D,MAqBa;AAAA,yBApBzCF,MAoByC;AAAA,MApBzCA,MAoByC,4BApBhC2D,eAAe,CAAC3D,MAoBgB;AAAA,2BAnBzCC,QAmByC;AAAA,MAnBzCA,QAmByC,8BAnB9BgE,kBAAkB,CAAChE,QAmBW;AAAA,6BAlBzCoE,UAkByC;AAAA,MAlBzCA,UAkByC,gCAlB5BJ,kBAAkB,CAACI,UAkBS;AAAA,8BAjBzCpB,WAiByC;AAAA,MAjBzCA,WAiByC,iCAjB3BgB,kBAAkB,CAAChB,WAiBQ;AAAA,MAhBzCyD,WAgByC,QAhBzCA,WAgByC;AAAA,8BAfzCxD,WAeyC;AAAA,MAfzCA,WAeyC,iCAf3Be,kBAAkB,CAACf,WAeQ;AAAA,MAdzCyD,WAcyC,QAdzCA,WAcyC;AAAA,MAbzCC,OAayC,QAbzCA,OAayC;AAAA,MAZzCC,SAYyC,QAZzCA,SAYyC;AAAA,6BAXzC1D,UAWyC;AAAA,MAXzCA,UAWyC,gCAX5Bc,kBAAkB,CAACd,UAWS;AAAA,2BAVzCC,QAUyC;AAAA,MAVzCA,QAUyC,8BAV9Ba,kBAAkB,CAACb,QAUW;AAAA,8BATzChC,WASyC;AAAA,MATzCA,WASyC,iCAT3B6C,kBAAkB,CAAC7C,WASQ;AAAA,gCARzCS,aAQyC;AAAA,MARzCA,aAQyC,mCARzBoC,kBAAkB,CAACpC,aAQM;AAAA,4BAPzC0B,SAOyC;AAAA,MAPzCA,SAOyC,+BAP7BU,kBAAkB,CAACV,SAOU;AAAA,MANzCzB,YAMyC,QANzCA,YAMyC;AAAA,MALzCC,WAKyC,QALzCA,WAKyC;AAAA,MAJzCC,YAIyC,QAJzCA,YAIyC;AAAA,MAHzCC,OAGyC,QAHzCA,OAGyC;AAAA,0BAFzCuB,OAEyC;AAAA,MAFzCA,OAEyC,6BAF/BS,kBAAkB,CAACT,OAEY;AAAA,0BADzCE,OACyC;AAAA,MADzCA,OACyC,6BAD/BO,kBAAkB,CAACP,OACY;AACzC,MAAMiF,QAAQ,GAAGC,MAAM,CAA2B,IAA3B,CAAvB;AACA,MAAMZ,KAAK,GAAGa,QAAQ,EAAtB;;AAFyC,kBAGHC,QAAQ,CAAuC,IAAvC,CAHL;AAAA;AAAA,MAGlCC,WAHkC;AAAA,MAGrBC,cAHqB;;AAAA,uBAK4B/B,aAAa,CAC9EnH,KAD8E,EAE9EC,MAF8E,EAG9EyG,aAH8E,CALzC;AAAA,MAKjCC,MALiC,kBAKjCA,MALiC;AAAA,MAKzBS,UALyB,kBAKzBA,UALyB;AAAA,MAKbC,WALa,kBAKbA,WALa;AAAA,MAKAC,UALA,kBAKAA,UALA;AAAA,MAKYC,WALZ,kBAKYA,WALZ;;AAAA,wBAWK5H,cAAc,CAAW;AACnEjB,IAAAA,IAAI,EAAJA,IADmE;AAEnEkB,IAAAA,UAAU,EAAVA,UAFmE;AAGnEC,IAAAA,OAAO,EAAPA,OAHmE;AAInEC,IAAAA,UAAU,EAAVA,UAJmE;AAKnEC,IAAAA,OAAO,EAAPA,OALmE;AAMnEC,IAAAA,KAAK,EAAEoH,UAN4D;AAOnEnH,IAAAA,MAAM,EAAEoH,WAP2D;AAQnEnH,IAAAA,MAAM,EAANA,MARmE;AASnEC,IAAAA,QAAQ,EAARA,QATmE;AAUnEC,IAAAA,MAAM,EAANA;AAVmE,GAAX,CAXnB;AAAA,MAWjCE,MAXiC,mBAWjCA,MAXiC;AAAA,MAWzBC,MAXyB,mBAWzBA,MAXyB;AAAA,MAWjBO,KAXiB,mBAWjBA,KAXiB;AAAA,MAWVI,UAXU,mBAWVA,UAXU;;AAwBzC,MAAM8D,gBAAgB,GAAG5D,yBAAyB,CAAWN,KAAX,EAAkBQ,WAAlB,CAAlD;;AAxByC,wBA0BX6H,cAAc,CAAC;AACzC5K,IAAAA,MAAM,EAAEuC,KADiC;AAEzCd,IAAAA,KAAK,EAAEoH,UAFkC;AAGzCnH,IAAAA,MAAM,EAAEoH,WAHiC;AAIzCd,IAAAA,KAAK,EAAE9C;AAJkC,GAAD,CA1BH;AAAA,MA0BjC2F,QA1BiC,mBA0BjCA,QA1BiC;AAAA,MA0BvBC,OA1BuB,mBA0BvBA,OA1BuB;;AAiCzC,MAAM7B,gBAAgB,GAAG9H,OAAO,CAC5B;AAAA,WAAO;AACHY,MAAAA,MAAM,EAANA,MADG;AAEHC,MAAAA,MAAM,EAANA,MAFG;AAGHO,MAAAA,KAAK,EAALA,KAHG;AAIH6F,MAAAA,MAAM,EAANA,MAJG;AAKHS,MAAAA,UAAU,EAAVA,UALG;AAMHC,MAAAA,WAAW,EAAXA,WANG;AAOHC,MAAAA,UAAU,EAAVA,UAPG;AAQHC,MAAAA,WAAW,EAAXA;AARG,KAAP;AAAA,GAD4B,EAW5B,CAACjH,MAAD,EAASC,MAAT,EAAiBO,KAAjB,EAAwB6F,MAAxB,EAAgCS,UAAhC,EAA4CC,WAA5C,EAAyDC,UAAzD,EAAqEC,WAArE,CAX4B,CAAhC;AAcA+B,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,CAACT,QAAQ,CAACU,OAAd,EAAuB;AAEvBV,IAAAA,QAAQ,CAACU,OAAT,CAAiBvJ,KAAjB,GAAyBsH,UAAU,GAAGlD,UAAtC;AACAyE,IAAAA,QAAQ,CAACU,OAAT,CAAiBtJ,MAAjB,GAA0BsH,WAAW,GAAGnD,UAAxC;AAEA,QAAMI,GAAG,GAAGqE,QAAQ,CAACU,OAAT,CAAiBC,UAAjB,CAA4B,IAA5B,CAAZ;AAEAhF,IAAAA,GAAG,CAACiF,KAAJ,CAAUrF,UAAV,EAAsBA,UAAtB;AAEAI,IAAAA,GAAG,CAACK,SAAJ,GAAgBqD,KAAK,CAACwB,UAAtB;AACAlF,IAAAA,GAAG,CAACmF,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBrC,UAAnB,EAA+BC,WAA/B;AACA/C,IAAAA,GAAG,CAACoF,SAAJ,CAAcjD,MAAM,CAACkD,IAArB,EAA2BlD,MAAM,CAACmD,GAAlC;AAEAhG,IAAAA,MAAM,CAACtF,OAAP,CAAe,UAAAuJ,KAAK,EAAI;AACpB,UAAIA,KAAK,KAAK,MAAd,EAAsB;AAClBvD,QAAAA,GAAG,CAACuF,SAAJ,GAAgB7B,KAAK,CAACR,IAAN,CAAWsC,IAAX,CAAgBC,WAAhC;AACAzF,QAAAA,GAAG,CAAC0F,WAAJ,GAAkBhC,KAAK,CAACR,IAAN,CAAWsC,IAAX,CAAgBG,MAAlC;AAEAhH,QAAAA,WAAW,IACPiH,uBAAuB,CAAgB5F,GAAhB,EAAqB;AACxCxE,UAAAA,KAAK,EAAEoH,UADiC;AAExCnH,UAAAA,MAAM,EAAEoH,WAFgC;AAGxCoC,UAAAA,KAAK,EAAEnJ,MAHiC;AAIxC+J,UAAAA,IAAI,EAAE,GAJkC;AAKxC5M,UAAAA,MAAM,EAAEmJ;AALgC,SAArB,CAD3B;AASAxD,QAAAA,WAAW,IACPgH,uBAAuB,CAAgB5F,GAAhB,EAAqB;AACxCxE,UAAAA,KAAK,EAAEoH,UADiC;AAExCnH,UAAAA,MAAM,EAAEoH,WAFgC;AAGxCoC,UAAAA,KAAK,EAAElJ,MAHiC;AAIxC8J,UAAAA,IAAI,EAAE,GAJkC;AAKxC5M,UAAAA,MAAM,EAAEoJ;AALgC,SAArB,CAD3B;AAQH,OArBD,MAqBO,IAAIkB,KAAK,KAAK,aAAd,EAA6B;AAChCuC,QAAAA,yBAAyB,CAAgC9F,GAAhC,EAAqC;AAC1DlD,UAAAA,WAAW,EAAE0D,gBAD6C;AAE1DkD,UAAAA,KAAK,EAALA;AAF0D,SAArC,CAAzB;AAIH,OALM,MAKA,IAAIH,KAAK,KAAK,MAAd,EAAsB;AACzBwC,QAAAA,kBAAkB,CAA+B/F,GAA/B,EAAoC;AAClDlE,UAAAA,MAAM,EAAEA,MAD0C;AAElDC,UAAAA,MAAM,EAAEA,MAF0C;AAGlDP,UAAAA,KAAK,EAAEoH,UAH2C;AAIlDnH,UAAAA,MAAM,EAAEoH,WAJ0C;AAKlDyC,UAAAA,GAAG,EAAEhD,OAL6C;AAMlD0D,UAAAA,KAAK,EAAEzD,SAN2C;AAOlD0D,UAAAA,MAAM,EAAEpH,UAP0C;AAQlDwG,UAAAA,IAAI,EAAEvG,QAR4C;AASlD4E,UAAAA,KAAK,EAALA;AATkD,SAApC,CAAlB;AAWH,OAZM,MAYA,IAAIH,KAAK,KAAK,OAAd,EAAuB;AAC1BjH,QAAAA,KAAK,CAACtC,OAAN,CAAc,UAAAiD,IAAI,EAAI;AAClB8C,UAAAA,UAAU,CAACC,GAAD,EAAM/C,IAAN,CAAV;AACH,SAFD;AAGH,OAJM,MAIA,IAAIsG,KAAK,KAAK,MAAd,EAAsB;AACzB,YAAItE,SAAS,KAAK,IAAlB,EAAwB;AACpBiH,UAAAA,qBAAqB,CAAClG,GAAD,EAAM6E,OAAN,CAArB;;AACA,cAAIJ,WAAJ,EAAiB;AACb0B,YAAAA,yBAAyB,CAACnG,GAAD,EAAM6E,OAAN,EAAgBJ,WAAW,CAACnK,KAA5B,CAAzB;AACH;AACJ;AACJ,OAPM,MAOA,IAAIiJ,KAAK,KAAK,SAAd,EAAyB;AAC5BnE,QAAAA,OAAO,CAACpF,OAAR,CAAgB,UAAAsJ,MAAM,EAAI;AACtB8C,UAAAA,oBAAoB,CAACpG,GAAD,oCACbsD,MADa;AAEhBpJ,YAAAA,IAAI,EAAEwC,UAFU;AAGhB2J,YAAAA,cAAc,EAAEzD,UAHA;AAIhB0D,YAAAA,eAAe,EAAEzD,WAJD;AAKhBa,YAAAA,KAAK,EAALA;AALgB,aAApB;AAOH,SARD;AASH,OAVM,MAUA,IAAI,OAAOH,KAAP,KAAiB,UAArB,EAAiC;AACpCA,QAAAA,KAAK,CAACvD,GAAD,EAAMgD,gBAAN,CAAL;AACH,OAFM,MAEA;AACH,cAAM,IAAIlK,KAAJ,0BAA4ByK,KAA5B,EAAN;AACH;AACJ,KAjED;AAkEH,GAhFQ,EAgFN,CACCc,QADD,EAECzB,UAFD,EAGCC,WAHD,EAICC,UAJD,EAKCC,WALD,EAMCZ,MAAM,CAACmD,GANR,EAOCnD,MAAM,CAACkD,IAPR,EAQCzF,UARD,EASCG,UATD,EAUCT,MAVD,EAWC0D,gBAXD,EAYCU,KAZD,EAaC5H,MAbD,EAcCC,MAdD,EAeCO,KAfD,EAgBCqC,WAhBD,EAiBCC,WAjBD,EAkBC0D,OAlBD,EAmBCC,SAnBD,EAoBC1D,UApBD,EAqBCC,QArBD,EAsBCM,OAtBD,EAuBC1C,UAvBD,EAwBCuC,SAxBD,EAyBC4F,OAzBD,EA0BCJ,WA1BD,CAhFM,CAAT;;AA/CyC,oBA4JK/C,UAAU,EA5Jf;AAAA,MA4JjCC,oBA5JiC,eA4JjCA,oBA5JiC;AAAA,MA4JXC,WA5JW,eA4JXA,WA5JW;;AA8JzC,MAAM2E,qBAAqB,GAAG1I,WAAW,CACrC,UAAAC,KAAK,EAAI;AAAA,6BACU0I,iBAAiB,CAACnC,QAAQ,CAACU,OAAV,EAAoBjH,KAApB,CAD3B;AAAA;AAAA,QACErD,CADF;AAAA,QACKI,CADL;;AAEL,QAAI,CAAC4L,cAAc,CAACtE,MAAM,CAACkD,IAAR,EAAclD,MAAM,CAACmD,GAArB,EAA0B1C,UAA1B,EAAsCC,WAAtC,EAAmDpI,CAAnD,EAAsDI,CAAtD,CAAnB,EAA6E,OAAO,IAAP;AAE7E,QAAM6L,SAAS,GAAG9B,QAAQ,CAAC+B,IAAT,CAAclM,CAAC,GAAG0H,MAAM,CAACkD,IAAzB,EAA+BxK,CAAC,GAAGsH,MAAM,CAACmD,GAA1C,CAAlB;AACA,WAAOhJ,KAAK,CAACoK,SAAD,CAAZ;AACH,GAPoC,EAQrC,CAACrC,QAAD,EAAWlC,MAAX,EAAmBS,UAAnB,EAA+BC,WAA/B,EAA4C+B,QAA5C,CARqC,CAAzC;AAWA,MAAMgC,gBAAgB,GAAG/I,WAAW,CAChC,UAAAC,KAAK,EAAI;AACL,QAAMb,IAAI,GAAGsJ,qBAAqB,CAACzI,KAAD,CAAlC;AACA4G,IAAAA,cAAc,CAACzH,IAAD,CAAd;;AAEA,QAAIA,IAAJ,EAAU;AACN0E,MAAAA,oBAAoB,CAACE,aAAa,CAAC3C,OAAD,EAAU;AAAEjC,QAAAA,IAAI,EAAJA;AAAF,OAAV,CAAd,EAAmCa,KAAnC,CAApB;;AACA,UAAI2G,WAAW,IAAIA,WAAW,CAACjK,EAAZ,KAAmByC,IAAI,CAACzC,EAA3C,EAA+C;AAC3CkD,QAAAA,YAAY,IAAIA,YAAY,CAAC+G,WAAD,EAAc3G,KAAd,CAA5B;AACAN,QAAAA,YAAY,IAAIA,YAAY,CAACP,IAAD,EAAOa,KAAP,CAA5B;AACH;;AACD,UAAI,CAAC2G,WAAL,EAAkB;AACdjH,QAAAA,YAAY,IAAIA,YAAY,CAACP,IAAD,EAAOa,KAAP,CAA5B;AACH;;AACDL,MAAAA,WAAW,IAAIA,WAAW,CAACR,IAAD,EAAOa,KAAP,CAA1B;AACH,KAVD,MAUO;AACH8D,MAAAA,WAAW;AACX6C,MAAAA,WAAW,IAAI/G,YAAf,IAA+BA,YAAY,CAAC+G,WAAD,EAAc3G,KAAd,CAA3C;AACH;AACJ,GAnB+B,EAoBhC,CACIyI,qBADJ,EAEI9B,WAFJ,EAGIC,cAHJ,EAII/C,oBAJJ,EAKIC,WALJ,EAMI1C,OANJ,EAOI1B,YAPJ,EAQIC,WARJ,EASIC,YATJ,CApBgC,CAApC;AAiCA,MAAMM,gBAAgB,GAAGH,WAAW,CAChC,UAAAC,KAAK,EAAI;AACL8D,IAAAA,WAAW;AACX8C,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAD,IAAAA,WAAW,IAAI/G,YAAf,IAA+BA,YAAY,CAAC+G,WAAD,EAAc3G,KAAd,CAA3C;AACH,GAL+B,EAMhC,CAAC8D,WAAD,EAAc6C,WAAd,EAA2BC,cAA3B,EAA2ChH,YAA3C,CANgC,CAApC;AASA,MAAMO,WAAW,GAAGJ,WAAW,CAC3B,UAAAC,KAAK,EAAI;AACL,QAAIH,OAAJ,EAAa;AACT,UAAMV,IAAI,GAAGsJ,qBAAqB,CAACzI,KAAD,CAAlC;AACAb,MAAAA,IAAI,IAAIU,OAAO,CAACV,IAAD,EAAOa,KAAP,CAAf;AACH;AACJ,GAN0B,EAO3B,CAACyI,qBAAD,EAAwB5I,OAAxB,CAP2B,CAA/B;AAUA,SACIO;AACI,IAAA,GAAG,EAAEmG,QADT;AAEI,IAAA,KAAK,EAAEvB,UAAU,GAAGlD,UAFxB;AAGI,IAAA,MAAM,EAAEmD,WAAW,GAAGnD,UAH1B;AAII,IAAA,KAAK,EAAE;AACHpE,MAAAA,KAAK,EAAEsH,UADJ;AAEHrH,MAAAA,MAAM,EAAEsH,WAFL;AAGH8D,MAAAA,MAAM,EAAEtJ,aAAa,GAAG,MAAH,GAAY;AAH9B,KAJX;AASI,IAAA,YAAY,EAAEA,aAAa,GAAGqJ,gBAAH,GAAsBvI,SATrD;AAUI,IAAA,WAAW,EAAEd,aAAa,GAAGqJ,gBAAH,GAAsBvI,SAVpD;AAWI,IAAA,YAAY,EAAEd,aAAa,GAAGS,gBAAH,GAAsBK,SAXrD;AAYI,IAAA,OAAO,EAAEd,aAAa,GAAGU,WAAH,GAAiBI;AAZ3C,IADJ;AAgBH,CA7QD;;IA+QayI,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,MAC7BvJ,aAD6B,SAC7BA,aAD6B;AAAA,MAE7BoG,aAF6B,SAE7BA,aAF6B;AAAA,MAG7BD,KAH6B,SAG7BA,KAH6B;AAAA,MAI1BI,KAJ0B;;AAAA,SAM7B5F,IAAC,SAAD;AAAiBX,IAAAA,aAAa,EAAbA,aAAjB;AAAgCoG,IAAAA,aAAa,EAAbA,aAAhC;AAA+CD,IAAAA,KAAK,EAALA,KAA/C;AAAwD,IAAA,OAAO,EAAE,KAAjE;AAAA,cACIxF,IAAC,sBAAD,qBAAsC4F,KAAtC;AADJ,IAN6B;AAAA;;IC3RpBiD,2BAA2B,GAAG,SAA9BA,2BAA8B,CACvCjD,KADuC;AAAA,SAGvC5F,IAAC,iBAAD;AAAA,cACK;AAAA,UAAG1C,KAAH,QAAGA,KAAH;AAAA,UAAUC,MAAV,QAAUA,MAAV;AAAA,aACGyC,IAAC,iBAAD;AAA6B,QAAA,KAAK,EAAE1C,KAApC;AAA2C,QAAA,MAAM,EAAEC;AAAnD,SAA+DqI,KAA/D,EADH;AAAA;AADL,IAHuC;AAAA;;;;"}