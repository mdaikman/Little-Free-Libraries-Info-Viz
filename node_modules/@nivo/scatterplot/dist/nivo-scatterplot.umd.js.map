{"version":3,"file":"nivo-scatterplot.umd.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/compute.ts","../src/hooks.ts","../src/Node.tsx","../src/Tooltip.tsx","../src/props.tsx","../src/ScatterPlotAnnotations.tsx","../src/Nodes.tsx","../src/Mesh.tsx","../src/ScatterPlot.tsx","../src/ResponsiveScatterPlot.tsx","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/ScatterPlotCanvas.tsx","../src/ResponsiveScatterPlotCanvas.tsx"],"sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import get from 'lodash/get'\nimport isString from 'lodash/isString'\nimport isNumber from 'lodash/isNumber'\nimport isPlainObject from 'lodash/isPlainObject'\nimport { scaleLinear } from 'd3-scale'\nimport { ComputedSerie } from '@nivo/scales'\nimport {\n    ScatterPlotCommonProps,\n    ScatterPlotDatum,\n    ScatterPlotNodeData,\n    ScatterPlotNodeDynamicSizeSpec,\n} from './types'\n\nconst isDynamicSizeSpec = <RawDatum extends ScatterPlotDatum>(\n    size: ScatterPlotCommonProps<RawDatum>['nodeSize']\n): size is ScatterPlotNodeDynamicSizeSpec => isPlainObject(size)\n\nexport const getNodeSizeGenerator = <RawDatum extends ScatterPlotDatum>(\n    size: ScatterPlotCommonProps<RawDatum>['nodeSize']\n) => {\n    if (typeof size === 'function') return size\n    if (isNumber(size)) return () => size\n    if (isDynamicSizeSpec<RawDatum>(size)) {\n        if (!isString(size.key)) {\n            throw new Error(\n                'symbolSize is invalid, key should be a string pointing to the property to use to determine node size'\n            )\n        }\n        if (!Array.isArray(size.values) || size.values.length !== 2) {\n            throw new Error(\n                'symbolSize is invalid, values spec should be an array containing two values, min and max'\n            )\n        }\n        if (!Array.isArray(size.sizes) || size.sizes.length !== 2) {\n            throw new Error(\n                'symbolSize is invalid, sizes spec should be an array containing two values, min and max'\n            )\n        }\n\n        const sizeScale = scaleLinear()\n            .domain([size.values[0], size.values[1]])\n            .range([size.sizes[0], size.sizes[1]])\n\n        return (datum: Omit<ScatterPlotNodeData<RawDatum>, 'size' | 'color'>) =>\n            sizeScale(get(datum, size.key))\n    }\n\n    throw new Error('nodeSize is invalid, it should be either a function, a number or an object')\n}\n\nexport const computePoints = <RawDatum extends ScatterPlotDatum>({\n    series,\n    formatX,\n    formatY,\n    getNodeId,\n}: {\n    series: ComputedSerie<{ id: string | number }, RawDatum>[]\n    formatX: (value: RawDatum['x']) => string | number\n    formatY: (value: RawDatum['x']) => string | number\n    getNodeId: (d: Omit<ScatterPlotNodeData<RawDatum>, 'id' | 'size' | 'color'>) => string\n}): Omit<ScatterPlotNodeData<RawDatum>, 'size' | 'color'>[] => {\n    const points: Omit<ScatterPlotNodeData<RawDatum>, 'size' | 'color'>[] = []\n\n    series.forEach(serie => {\n        serie.data.forEach((d, serieIndex) => {\n            const point: Omit<ScatterPlotNodeData<RawDatum>, 'id' | 'size' | 'color'> = {\n                index: points.length,\n                serieIndex,\n                serieId: serie.id,\n                x: d.position.x as number,\n                xValue: d.data.x,\n                formattedX: formatX(d.data.x),\n                y: d.position.y as number,\n                yValue: d.data.y,\n                formattedY: formatY(d.data.y),\n                data: d.data,\n            }\n\n            points.push({\n                ...point,\n                id: getNodeId(point),\n            })\n        })\n    })\n\n    return points\n}\n","import { useMemo } from 'react'\nimport { useValueFormatter, usePropertyAccessor } from '@nivo/core'\nimport { useOrdinalColorScale } from '@nivo/colors'\nimport { computeXYScalesForSeries } from '@nivo/scales'\nimport { useAnnotations } from '@nivo/annotations'\nimport { computePoints, getNodeSizeGenerator } from './compute'\nimport {\n    ScatterPlotCommonProps,\n    ScatterPlotDataProps,\n    ScatterPlotDatum,\n    ScatterPlotNodeData,\n} from './types'\n\nconst useNodeSize = <RawDatum extends ScatterPlotDatum>(\n    size: ScatterPlotCommonProps<RawDatum>['nodeSize']\n) => useMemo(() => getNodeSizeGenerator<RawDatum>(size), [size])\n\nexport const useScatterPlot = <RawDatum extends ScatterPlotDatum>({\n    data,\n    xScaleSpec,\n    xFormat,\n    yScaleSpec,\n    yFormat,\n    width,\n    height,\n    nodeId,\n    nodeSize,\n    colors,\n}: {\n    data: ScatterPlotDataProps<RawDatum>['data']\n    xScaleSpec: ScatterPlotCommonProps<RawDatum>['xScale']\n    xFormat?: ScatterPlotCommonProps<RawDatum>['xFormat']\n    yScaleSpec: ScatterPlotCommonProps<RawDatum>['yScale']\n    yFormat?: ScatterPlotCommonProps<RawDatum>['yFormat']\n    width: number\n    height: number\n    nodeId: ScatterPlotCommonProps<RawDatum>['nodeId']\n    nodeSize: ScatterPlotCommonProps<RawDatum>['nodeSize']\n    colors: ScatterPlotCommonProps<RawDatum>['colors']\n}) => {\n    const { series, xScale, yScale } = useMemo(\n        () =>\n            computeXYScalesForSeries<{ id: string | number }, RawDatum>(\n                data,\n                xScaleSpec,\n                yScaleSpec,\n                width,\n                height\n            ),\n        [data, xScaleSpec, yScaleSpec, width, height]\n    )\n\n    const formatX = useValueFormatter(xFormat)\n    const formatY = useValueFormatter(yFormat)\n    const getNodeId = usePropertyAccessor(nodeId)\n    const rawNodes = useMemo(\n        () => computePoints<RawDatum>({ series, formatX, formatY, getNodeId }),\n        [series, formatX, formatY, getNodeId]\n    )\n\n    const getNodeSize = useNodeSize<RawDatum>(nodeSize)\n\n    const getColor = useOrdinalColorScale(colors, 'serieId')\n\n    const nodes: ScatterPlotNodeData<RawDatum>[] = useMemo(\n        () =>\n            rawNodes.map(rawNode => ({\n                ...rawNode,\n                size: getNodeSize(rawNode),\n                color: getColor({ serieId: rawNode.serieId }),\n            })),\n        [rawNodes, getNodeSize, getColor]\n    )\n\n    const legendData = useMemo(\n        () =>\n            series.map(serie => ({\n                id: serie.id,\n                label: serie.id,\n                color: getColor({ serieId: serie.id }),\n            })),\n        [series, getColor]\n    )\n\n    return {\n        xScale,\n        yScale,\n        nodes,\n        legendData,\n    }\n}\n\nexport const useScatterPlotAnnotations = <RawDatum extends ScatterPlotDatum>(\n    items: ScatterPlotNodeData<RawDatum>[],\n    annotations: ScatterPlotCommonProps<RawDatum>['annotations']\n) =>\n    useAnnotations<ScatterPlotNodeData<RawDatum>>({\n        data: items,\n        annotations,\n        getPosition: (node: ScatterPlotNodeData<RawDatum>) => ({\n            x: node.x,\n            y: node.y,\n        }),\n        getDimensions: (node: ScatterPlotNodeData<RawDatum>) => ({\n            size: node.size,\n            width: node.size,\n            height: node.size,\n        }),\n    })\n","import { animated } from '@react-spring/web'\nimport { ScatterPlotDatum, ScatterPlotNodeProps } from './types'\nimport { useCallback } from 'react'\n\nconst interpolateRadius = (size: number) => size / 2\n\nexport const Node = <RawDatum extends ScatterPlotDatum>({\n    node,\n    style,\n    blendMode,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n}: ScatterPlotNodeProps<RawDatum>) => {\n    const handleMouseEnter = useCallback(event => onMouseEnter?.(node, event), [node, onMouseEnter])\n    const handleMouseMove = useCallback(event => onMouseMove?.(node, event), [node, onMouseMove])\n    const handleMouseLeave = useCallback(event => onMouseLeave?.(node, event), [node, onMouseLeave])\n    const handleClick = useCallback(event => onClick?.(node, event), [node, onClick])\n\n    return (\n        <animated.circle\n            cx={style.x}\n            cy={style.y}\n            r={style.size.to(interpolateRadius)}\n            fill={style.color}\n            style={{ mixBlendMode: blendMode }}\n            onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n            onMouseMove={isInteractive ? handleMouseMove : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { ScatterPlotTooltipProps, ScatterPlotDatum } from './types'\n\nexport const Tooltip = <RawDatum extends ScatterPlotDatum>({\n    node,\n}: ScatterPlotTooltipProps<RawDatum>) => (\n    <BasicTooltip\n        id={node.serieId}\n        value={`x: ${node.formattedX}, y: ${node.formattedY}`}\n        enableChip={true}\n        color={node.color}\n    />\n)\n","import { CssMixBlendMode } from '@nivo/core'\nimport { Node } from './Node'\nimport { Tooltip } from './Tooltip'\nimport {\n    ScatterPlotCommonProps,\n    ScatterPlotDatum,\n    ScatterPlotLayerId,\n    ScatterPlotNodeData,\n} from './types'\n\nexport const commonDefaultProps = {\n    xScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    } as ScatterPlotCommonProps<ScatterPlotDatum>['xScale'],\n    yScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    } as ScatterPlotCommonProps<ScatterPlotDatum>['yScale'],\n\n    enableGridX: true,\n    enableGridY: true,\n    axisBottom: {},\n    axisLeft: {},\n\n    nodeId: (({ serieId, index }) => `${serieId}.${index}`) as ScatterPlotCommonProps<\n        ScatterPlotDatum\n    >['nodeId'],\n    nodeSize: 9,\n    nodeComponent: Node,\n\n    colors: { scheme: 'nivo' } as ScatterPlotCommonProps<ScatterPlotDatum>['colors'],\n\n    isInteractive: true,\n    debugMesh: false,\n\n    tooltip: Tooltip,\n\n    markers: [],\n\n    legends: [],\n\n    annotations: [],\n}\n\nexport const svgDefaultProps = {\n    ...commonDefaultProps,\n    blendMode: 'normal' as CssMixBlendMode,\n    layers: [\n        'grid',\n        'axes',\n        'nodes',\n        'markers',\n        'mesh',\n        'legends',\n        'annotations',\n    ] as ScatterPlotLayerId[],\n    role: 'img',\n    useMesh: true,\n    animate: true,\n    motionConfig: 'default',\n}\n\nexport const canvasDefaultProps = {\n    ...commonDefaultProps,\n    layers: ['grid', 'axes', 'nodes', 'mesh', 'legends', 'annotations'] as ScatterPlotLayerId[],\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n    renderNode: (ctx: CanvasRenderingContext2D, node: ScatterPlotNodeData<ScatterPlotDatum>) => {\n        ctx.beginPath()\n        ctx.arc(node.x, node.y, node.size / 2, 0, 2 * Math.PI)\n        ctx.fillStyle = node.color\n        ctx.fill()\n    },\n}\n","import { Annotation } from '@nivo/annotations'\nimport { useScatterPlotAnnotations } from './hooks'\nimport { ScatterPlotCommonProps, ScatterPlotDatum, ScatterPlotNodeData } from './types'\n\ninterface ScatterPlotAnnotationsProps<RawDatum extends ScatterPlotDatum> {\n    nodes: ScatterPlotNodeData<RawDatum>[]\n    annotations: ScatterPlotCommonProps<RawDatum>['annotations']\n}\n\nexport const ScatterPlotAnnotations = <RawDatum extends ScatterPlotDatum>({\n    nodes,\n    annotations,\n}: ScatterPlotAnnotationsProps<RawDatum>) => {\n    const boundAnnotations = useScatterPlotAnnotations<RawDatum>(nodes, annotations)\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","import { useTransition } from '@react-spring/web'\nimport { CssMixBlendMode, useMotionConfig } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport {\n    ScatterPlotCommonProps,\n    ScatterPlotDatum,\n    ScatterPlotNode,\n    ScatterPlotNodeData,\n} from './types'\nimport { createElement, useCallback } from 'react'\n\ninterface NodesProps<RawDatum extends ScatterPlotDatum> {\n    nodes: ScatterPlotNodeData<RawDatum>[]\n    nodeComponent: ScatterPlotNode<RawDatum>\n    isInteractive: boolean\n    onMouseEnter?: ScatterPlotCommonProps<RawDatum>['onMouseEnter']\n    onMouseMove?: ScatterPlotCommonProps<RawDatum>['onMouseMove']\n    onMouseLeave?: ScatterPlotCommonProps<RawDatum>['onMouseLeave']\n    onClick?: ScatterPlotCommonProps<RawDatum>['onClick']\n    tooltip: ScatterPlotCommonProps<RawDatum>['tooltip']\n    blendMode: CssMixBlendMode\n}\n\nconst getNodeKey = <RawDatum extends ScatterPlotDatum>(node: ScatterPlotNodeData<RawDatum>) =>\n    node.id\nconst regularTransition = <RawDatum extends ScatterPlotDatum>(\n    node: ScatterPlotNodeData<RawDatum>\n) => ({\n    x: node.x,\n    y: node.y,\n    size: node.size,\n    color: node.color,\n})\nconst leaveTransition = <RawDatum extends ScatterPlotDatum>(\n    node: ScatterPlotNodeData<RawDatum>\n) => ({\n    x: node.x,\n    y: node.y,\n    size: 0,\n    color: node.color,\n})\n\nexport const Nodes = <RawDatum extends ScatterPlotDatum>({\n    nodes,\n    nodeComponent,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    blendMode,\n}: NodesProps<RawDatum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const transition = useTransition<\n        ScatterPlotNodeData<RawDatum>,\n        {\n            x: number\n            y: number\n            size: number\n            color: string\n        }\n    >(nodes, {\n        keys: getNodeKey,\n        from: regularTransition,\n        enter: regularTransition,\n        update: regularTransition,\n        leave: leaveTransition,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseEnter = useCallback(\n        (node, event) => {\n            showTooltipFromEvent(createElement(tooltip, { node }), event)\n            onMouseEnter?.(node, event)\n        },\n        [tooltip, showTooltipFromEvent, onMouseEnter]\n    )\n    const handleMouseMove = useCallback(\n        (node, event) => {\n            showTooltipFromEvent(createElement(tooltip, { node }), event)\n            onMouseMove?.(node, event)\n        },\n        [tooltip, showTooltipFromEvent, onMouseMove]\n    )\n    const handleMouseLeave = useCallback(\n        (node, event) => {\n            hideTooltip()\n            onMouseLeave?.(node, event)\n        },\n        [hideTooltip, onMouseLeave]\n    )\n    const handleClick = useCallback((node, event) => onClick?.(node, event), [onClick])\n\n    return (\n        <>\n            {transition((style, node) =>\n                createElement(nodeComponent, {\n                    node,\n                    style,\n                    blendMode,\n                    isInteractive,\n                    onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n                    onMouseMove: isInteractive ? handleMouseMove : undefined,\n                    onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n                    onClick: isInteractive ? handleClick : undefined,\n                })\n            )}\n        </>\n    )\n}\n","import { createElement, useCallback } from 'react'\nimport { useTooltip } from '@nivo/tooltip'\nimport { Mesh as BaseMesh } from '@nivo/voronoi'\nimport { ScatterPlotCommonProps, ScatterPlotDatum, ScatterPlotNodeData } from './types'\n\ninterface MeshProps<RawDatum extends ScatterPlotDatum> {\n    nodes: ScatterPlotNodeData<RawDatum>[]\n    width: number\n    height: number\n    onMouseEnter?: ScatterPlotCommonProps<RawDatum>['onMouseEnter']\n    onMouseMove?: ScatterPlotCommonProps<RawDatum>['onMouseMove']\n    onMouseLeave?: ScatterPlotCommonProps<RawDatum>['onMouseLeave']\n    onClick?: ScatterPlotCommonProps<RawDatum>['onClick']\n    tooltip: ScatterPlotCommonProps<RawDatum>['tooltip']\n    debug: boolean\n}\n\nexport const Mesh = <RawDatum extends ScatterPlotDatum>({\n    nodes,\n    width,\n    height,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    debug,\n}: MeshProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (node: ScatterPlotNodeData<RawDatum>, event) => {\n            showTooltipFromEvent(createElement(tooltip, { node }), event)\n            onMouseEnter && onMouseEnter(node, event)\n        },\n        [showTooltipFromEvent, tooltip, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        (node: ScatterPlotNodeData<RawDatum>, event) => {\n            showTooltipFromEvent(createElement(tooltip, { node }), event)\n            onMouseMove && onMouseMove(node, event)\n        },\n        [showTooltipFromEvent, tooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (node: ScatterPlotNodeData<RawDatum>, event) => {\n            hideTooltip()\n            onMouseLeave && onMouseLeave(node, event)\n        },\n        [hideTooltip, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        (node: ScatterPlotNodeData<RawDatum>, event) => {\n            onClick && onClick(node, event)\n        },\n        [onClick]\n    )\n\n    return (\n        <BaseMesh\n            nodes={nodes}\n            width={width}\n            height={height}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n            debug={debug}\n        />\n    )\n}\n","import { createElement, Fragment, ReactNode, useMemo } from 'react'\nimport { SvgWrapper, Container, useDimensions, CartesianMarkers } from '@nivo/core'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { useScatterPlot } from './hooks'\nimport { svgDefaultProps } from './props'\nimport { ScatterPlotAnnotations } from './ScatterPlotAnnotations'\nimport { Nodes } from './Nodes'\nimport { Mesh } from './Mesh'\nimport { ScatterPlotDatum, ScatterPlotLayerId, ScatterPlotSvgProps } from './types'\n\ntype InnerScatterPlotProps<RawDatum extends ScatterPlotDatum> = Omit<\n    ScatterPlotSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerScatterPlot = <RawDatum extends ScatterPlotDatum>({\n    data,\n    xScale: xScaleSpec = svgDefaultProps.xScale,\n    xFormat,\n    yScale: yScaleSpec = svgDefaultProps.yScale,\n    yFormat,\n    width,\n    height,\n    margin: partialMargin,\n    layers = svgDefaultProps.layers,\n    colors = svgDefaultProps.colors,\n    blendMode = svgDefaultProps.blendMode,\n    nodeId = svgDefaultProps.nodeId,\n    nodeSize = svgDefaultProps.nodeSize,\n    nodeComponent = svgDefaultProps.nodeComponent,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    annotations = svgDefaultProps.annotations,\n    isInteractive = svgDefaultProps.isInteractive,\n    useMesh = svgDefaultProps.useMesh,\n    debugMesh = svgDefaultProps.debugMesh,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip = svgDefaultProps.tooltip,\n    markers = svgDefaultProps.markers,\n    legends = svgDefaultProps.legends,\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerScatterPlotProps<RawDatum>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { xScale, yScale, nodes, legendData } = useScatterPlot<RawDatum>({\n        data,\n        xScaleSpec,\n        xFormat,\n        yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        nodeId,\n        nodeSize,\n        colors,\n    })\n\n    const customLayerProps = useMemo(\n        () => ({\n            xScale,\n            yScale,\n            nodes,\n            margin,\n            innerWidth,\n            innerHeight,\n            outerWidth,\n            outerHeight,\n        }),\n        [xScale, yScale, nodes, margin, innerWidth, innerHeight, outerWidth, outerHeight]\n    )\n\n    const layerById: Record<ScatterPlotLayerId, ReactNode> = {\n        grid: null,\n        axes: null,\n        nodes: null,\n        markers: null,\n        mesh: null,\n        annotations: null,\n        legends: null,\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? (xScale as any) : null}\n                yScale={enableGridY ? (yScale as any) : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale as any}\n                yScale={yScale as any}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (layers.includes('nodes')) {\n        layerById.nodes = (\n            <Nodes<RawDatum>\n                key=\"nodes\"\n                nodes={nodes}\n                nodeComponent={nodeComponent}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n                blendMode={blendMode}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n            />\n        )\n    }\n\n    if (layers.includes('markers')) {\n        layerById.markers = (\n            <CartesianMarkers<RawDatum['x'], RawDatum['y']>\n                key=\"markers\"\n                markers={markers}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale as (value: RawDatum['x']) => number}\n                yScale={yScale as (value: RawDatum['y']) => number}\n            />\n        )\n    }\n\n    if (layers.includes('mesh') && isInteractive && useMesh) {\n        layerById.mesh = (\n            <Mesh<RawDatum>\n                key=\"mesh\"\n                nodes={nodes}\n                width={innerWidth}\n                height={innerHeight}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                tooltip={tooltip}\n                debug={debugMesh}\n            />\n        )\n    }\n\n    if (layers.includes('annotations')) {\n        layerById.annotations = (\n            <ScatterPlotAnnotations<RawDatum>\n                key=\"annotations\"\n                nodes={nodes}\n                annotations={annotations}\n            />\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = legends.map((legend, i) => (\n            <BoxLegendSvg\n                key={i}\n                {...legend}\n                containerWidth={innerWidth}\n                containerHeight={innerHeight}\n                data={legendData}\n            />\n        ))\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'string' && layerById[layer] !== undefined) {\n                    return layerById[layer]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, customLayerProps)}</Fragment>\n                }\n\n                throw new Error(`Unknown layer (${layer})`)\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const ScatterPlot = <RawDatum extends ScatterPlotDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: ScatterPlotSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerScatterPlot<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { ScatterPlot } from './ScatterPlot'\nimport { ScatterPlotDatum, ScatterPlotSvgProps } from './types'\n\nexport const ResponsiveScatterPlot = <RawDatum extends ScatterPlotDatum>(\n    props: Omit<ScatterPlotSvgProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ScatterPlot<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { createElement, useRef, useState, useEffect, useCallback, useMemo } from 'react'\nimport { Container, useDimensions, useTheme, getRelativeCursor, isCursorInRect } from '@nivo/core'\nimport { renderAnnotationsToCanvas } from '@nivo/annotations'\nimport { CanvasAxisProp, renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useVoronoiMesh, renderVoronoiToCanvas, renderVoronoiCellToCanvas } from '@nivo/voronoi'\nimport { canvasDefaultProps, svgDefaultProps } from './props'\nimport { useScatterPlot, useScatterPlotAnnotations } from './hooks'\nimport { ScatterPlotCanvasProps, ScatterPlotDatum, ScatterPlotNodeData } from './types'\n\ntype InnerScatterPlotCanvasProps<RawDatum extends ScatterPlotDatum> = Omit<\n    ScatterPlotCanvasProps<RawDatum>,\n    'renderWrapper' | 'theme'\n>\n\nconst InnerScatterPlotCanvas = <RawDatum extends ScatterPlotDatum>({\n    data,\n    xScale: xScaleSpec = canvasDefaultProps.xScale,\n    xFormat,\n    yScale: yScaleSpec = canvasDefaultProps.yScale,\n    yFormat,\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio = canvasDefaultProps.pixelRatio,\n    layers = canvasDefaultProps.layers,\n    colors = canvasDefaultProps.colors,\n    nodeId = svgDefaultProps.nodeId,\n    nodeSize = canvasDefaultProps.nodeSize,\n    renderNode = canvasDefaultProps.renderNode,\n    enableGridX = canvasDefaultProps.enableGridX,\n    gridXValues,\n    enableGridY = canvasDefaultProps.enableGridY,\n    gridYValues,\n    axisTop,\n    axisRight,\n    axisBottom = canvasDefaultProps.axisBottom,\n    axisLeft = canvasDefaultProps.axisLeft,\n    annotations = canvasDefaultProps.annotations,\n    isInteractive = canvasDefaultProps.isInteractive,\n    debugMesh = canvasDefaultProps.debugMesh,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip = canvasDefaultProps.tooltip,\n    legends = canvasDefaultProps.legends,\n}: InnerScatterPlotCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n    const theme = useTheme()\n    const [currentNode, setCurrentNode] = useState<ScatterPlotNodeData<RawDatum> | null>(null)\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { xScale, yScale, nodes, legendData } = useScatterPlot<RawDatum>({\n        data,\n        xScaleSpec,\n        xFormat,\n        yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        nodeId,\n        nodeSize,\n        colors,\n    })\n\n    const boundAnnotations = useScatterPlotAnnotations<RawDatum>(nodes, annotations)\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points: nodes,\n        width: innerWidth,\n        height: innerHeight,\n        debug: debugMesh,\n    })\n\n    const customLayerProps = useMemo(\n        () => ({\n            xScale,\n            yScale,\n            nodes,\n            margin,\n            innerWidth,\n            innerHeight,\n            outerWidth,\n            outerHeight,\n        }),\n        [xScale, yScale, nodes, margin, innerWidth, innerHeight, outerWidth, outerHeight]\n    )\n\n    useEffect(() => {\n        if (!canvasEl.current) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'grid') {\n                ctx.lineWidth = theme.grid.line.strokeWidth as number\n                ctx.strokeStyle = theme.grid.line.stroke as string\n\n                enableGridX &&\n                    renderGridLinesToCanvas<RawDatum['x']>(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: xScale as any,\n                        axis: 'x',\n                        values: gridXValues,\n                    })\n\n                enableGridY &&\n                    renderGridLinesToCanvas<RawDatum['y']>(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: yScale as any,\n                        axis: 'y',\n                        values: gridYValues,\n                    })\n            } else if (layer === 'annotations') {\n                renderAnnotationsToCanvas<ScatterPlotNodeData<RawDatum>>(ctx, {\n                    annotations: boundAnnotations as any,\n                    theme,\n                })\n            } else if (layer === 'axes') {\n                renderAxesToCanvas<RawDatum['x'], RawDatum['y']>(ctx, {\n                    xScale: xScale as any,\n                    yScale: yScale as any,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop as CanvasAxisProp<RawDatum['x']>,\n                    right: axisRight as CanvasAxisProp<RawDatum['y']>,\n                    bottom: axisBottom as CanvasAxisProp<RawDatum['x']>,\n                    left: axisLeft as CanvasAxisProp<RawDatum['y']>,\n                    theme,\n                })\n            } else if (layer === 'nodes') {\n                nodes.forEach(node => {\n                    renderNode(ctx, node)\n                })\n            } else if (layer === 'mesh') {\n                if (debugMesh === true) {\n                    renderVoronoiToCanvas(ctx, voronoi!)\n                    if (currentNode) {\n                        renderVoronoiCellToCanvas(ctx, voronoi!, currentNode.index)\n                    }\n                }\n            } else if (layer === 'legends') {\n                legends.forEach(legend => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data: legendData,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            } else if (typeof layer === 'function') {\n                layer(ctx, customLayerProps)\n            } else {\n                throw new Error(`Invalid layer: ${layer}`)\n            }\n        })\n    }, [\n        canvasEl,\n        innerWidth,\n        innerHeight,\n        outerWidth,\n        outerHeight,\n        margin.top,\n        margin.left,\n        pixelRatio,\n        renderNode,\n        layers,\n        customLayerProps,\n        theme,\n        xScale,\n        yScale,\n        nodes,\n        enableGridX,\n        enableGridY,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        legends,\n        legendData,\n        debugMesh,\n        voronoi,\n        currentNode,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const getNodeFromMouseEvent = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current!, event)\n            if (!isCursorInRect(margin.left, margin.top, innerWidth, innerHeight, x, y)) return null\n\n            const nodeIndex = delaunay.find(x - margin.left, y - margin.top)\n            return nodes[nodeIndex]\n        },\n        [canvasEl, margin, innerWidth, innerHeight, delaunay]\n    )\n\n    const handleMouseHover = useCallback(\n        event => {\n            const node = getNodeFromMouseEvent(event)\n            setCurrentNode(node)\n\n            if (node) {\n                showTooltipFromEvent(createElement(tooltip, { node }), event)\n                if (currentNode && currentNode.id !== node.id) {\n                    onMouseLeave && onMouseLeave(currentNode, event)\n                    onMouseEnter && onMouseEnter(node, event)\n                }\n                if (!currentNode) {\n                    onMouseEnter && onMouseEnter(node, event)\n                }\n                onMouseMove && onMouseMove(node, event)\n            } else {\n                hideTooltip()\n                currentNode && onMouseLeave && onMouseLeave(currentNode, event)\n            }\n        },\n        [\n            getNodeFromMouseEvent,\n            currentNode,\n            setCurrentNode,\n            showTooltipFromEvent,\n            hideTooltip,\n            tooltip,\n            onMouseEnter,\n            onMouseMove,\n            onMouseLeave,\n        ]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrentNode(null)\n            currentNode && onMouseLeave && onMouseLeave(currentNode, event)\n        },\n        [hideTooltip, currentNode, setCurrentNode, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            if (onClick) {\n                const node = getNodeFromMouseEvent(event)\n                node && onClick(node, event)\n            }\n        },\n        [getNodeFromMouseEvent, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const ScatterPlotCanvas = <RawDatum extends ScatterPlotDatum>({\n    isInteractive,\n    renderWrapper,\n    theme,\n    ...props\n}: ScatterPlotCanvasProps<RawDatum>) => (\n    <Container {...{ isInteractive, renderWrapper, theme }} animate={false}>\n        <InnerScatterPlotCanvas<RawDatum> {...props} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { ScatterPlotCanvas } from './ScatterPlotCanvas'\nimport { ScatterPlotCanvasProps, ScatterPlotDatum } from './types'\n\nexport const ResponsiveScatterPlotCanvas = <RawDatum extends ScatterPlotDatum>(\n    props: Omit<ScatterPlotCanvasProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => (\n            <ScatterPlotCanvas<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n"],"names":["objectWithoutPropertiesLoose","defineProperty","isDynamicSizeSpec","size","isPlainObject","getNodeSizeGenerator","isNumber","isString","key","Error","Array","isArray","values","length","sizes","sizeScale","scaleLinear","domain","range","datum","get","computePoints","series","formatX","formatY","getNodeId","points","forEach","serie","data","d","serieIndex","point","index","serieId","id","x","position","xValue","formattedX","y","yValue","formattedY","push","useNodeSize","useMemo","useScatterPlot","xScaleSpec","xFormat","yScaleSpec","yFormat","width","height","nodeId","nodeSize","colors","computeXYScalesForSeries","xScale","yScale","useValueFormatter","usePropertyAccessor","rawNodes","getNodeSize","getColor","useOrdinalColorScale","nodes","map","rawNode","color","legendData","label","useScatterPlotAnnotations","items","annotations","useAnnotations","getPosition","node","getDimensions","interpolateRadius","Node","style","blendMode","isInteractive","onMouseEnter","onMouseMove","onMouseLeave","onClick","handleMouseEnter","useCallback","event","handleMouseMove","handleMouseLeave","handleClick","_jsx","animated","to","mixBlendMode","undefined","Tooltip","BasicTooltip","commonDefaultProps","type","min","max","enableGridX","enableGridY","axisBottom","axisLeft","nodeComponent","scheme","debugMesh","tooltip","markers","legends","svgDefaultProps","layers","role","useMesh","animate","motionConfig","canvasDefaultProps","pixelRatio","window","devicePixelRatio","renderNode","ctx","beginPath","arc","Math","PI","fillStyle","fill","ScatterPlotAnnotations","boundAnnotations","annotation","i","Annotation","getNodeKey","regularTransition","leaveTransition","Nodes","useMotionConfig","springConfig","config","transition","useTransition","keys","from","enter","update","leave","immediate","useTooltip","showTooltipFromEvent","hideTooltip","createElement","Mesh","debug","BaseMesh","InnerScatterPlot","partialMargin","margin","gridXValues","gridYValues","axisTop","axisRight","ariaLabel","ariaLabelledBy","ariaDescribedBy","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","customLayerProps","layerById","grid","axes","mesh","includes","Grid","Axes","CartesianMarkers","legend","BoxLegendSvg","SvgWrapper","layer","Fragment","ScatterPlot","theme","renderWrapper","otherProps","Container","ResponsiveScatterPlot","props","ResponsiveWrapper","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","InnerScatterPlotCanvas","canvasEl","useRef","useTheme","useState","currentNode","setCurrentNode","useVoronoiMesh","delaunay","voronoi","useEffect","current","getContext","scale","background","fillRect","translate","left","top","lineWidth","line","strokeWidth","strokeStyle","stroke","renderGridLinesToCanvas","axis","renderAnnotationsToCanvas","renderAxesToCanvas","right","bottom","renderVoronoiToCanvas","renderVoronoiCellToCanvas","renderLegendToCanvas","containerWidth","containerHeight","getNodeFromMouseEvent","getRelativeCursor","isCursorInRect","nodeIndex","find","handleMouseHover","cursor","ScatterPlotCanvas","ResponsiveScatterPlotCanvas"],"mappings":"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"}